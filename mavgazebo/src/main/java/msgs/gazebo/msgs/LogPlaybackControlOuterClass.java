// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_playback_control.proto

package msgs.gazebo.msgs;

public final class LogPlaybackControlOuterClass {
  private LogPlaybackControlOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LogPlaybackControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.LogPlaybackControl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; &#92;brief Pause/play the log file.
     * </pre>
     *
     * <code>optional bool pause = 1;</code>
     * @return Whether the pause field is set.
     */
    boolean hasPause();
    /**
     * <pre>
     *&#47; &#92;brief Pause/play the log file.
     * </pre>
     *
     * <code>optional bool pause = 1;</code>
     * @return The pause.
     */
    boolean getPause();

    /**
     * <pre>
     *&#47; &#92;brief Make a relative jump. The value indicates the number of
     * /        iterations that will be executed at once. If a negative
     * /        value is specified, the playback will jump backwards.
     * </pre>
     *
     * <code>optional sint32 multi_step = 2;</code>
     * @return Whether the multiStep field is set.
     */
    boolean hasMultiStep();
    /**
     * <pre>
     *&#47; &#92;brief Make a relative jump. The value indicates the number of
     * /        iterations that will be executed at once. If a negative
     * /        value is specified, the playback will jump backwards.
     * </pre>
     *
     * <code>optional sint32 multi_step = 2;</code>
     * @return The multiStep.
     */
    int getMultiStep();

    /**
     * <pre>
     *&#47; &#92;brief Jump to the beginning of the log file.
     * </pre>
     *
     * <code>optional bool rewind = 3;</code>
     * @return Whether the rewind field is set.
     */
    boolean hasRewind();
    /**
     * <pre>
     *&#47; &#92;brief Jump to the beginning of the log file.
     * </pre>
     *
     * <code>optional bool rewind = 3;</code>
     * @return The rewind.
     */
    boolean getRewind();

    /**
     * <pre>
     *&#47; &#92;brief Jump to the end of the log file.
     * </pre>
     *
     * <code>optional bool forward = 4;</code>
     * @return Whether the forward field is set.
     */
    boolean hasForward();
    /**
     * <pre>
     *&#47; &#92;brief Jump to the end of the log file.
     * </pre>
     *
     * <code>optional bool forward = 4;</code>
     * @return The forward.
     */
    boolean getForward();

    /**
     * <pre>
     *&#47; &#92;brief Jump to a specific simulation time in the log file. The
     * /        playback service will load the frame with the closest
     * /        simulation time bigger than the "seek" value.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Time seek = 5;</code>
     * @return Whether the seek field is set.
     */
    boolean hasSeek();
    /**
     * <pre>
     *&#47; &#92;brief Jump to a specific simulation time in the log file. The
     * /        playback service will load the frame with the closest
     * /        simulation time bigger than the "seek" value.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Time seek = 5;</code>
     * @return The seek.
     */
    msgs.gazebo.msgs.TimeOuterClass.Time getSeek();
    /**
     * <pre>
     *&#47; &#92;brief Jump to a specific simulation time in the log file. The
     * /        playback service will load the frame with the closest
     * /        simulation time bigger than the "seek" value.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Time seek = 5;</code>
     */
    msgs.gazebo.msgs.TimeOuterClass.TimeOrBuilder getSeekOrBuilder();

    /**
     * <pre>
     *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
     * </pre>
     *
     * <code>optional double rt_factor = 6;</code>
     * @return Whether the rtFactor field is set.
     */
    boolean hasRtFactor();
    /**
     * <pre>
     *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
     * </pre>
     *
     * <code>optional double rt_factor = 6;</code>
     * @return The rtFactor.
     */
    double getRtFactor();
  }
  /**
   * Protobuf type {@code gazebo.msgs.LogPlaybackControl}
   */
  public static final class LogPlaybackControl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.LogPlaybackControl)
      LogPlaybackControlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogPlaybackControl.newBuilder() to construct.
    private LogPlaybackControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogPlaybackControl() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogPlaybackControl();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogPlaybackControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              pause_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              multiStep_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rewind_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              forward_ = input.readBool();
              break;
            }
            case 42: {
              msgs.gazebo.msgs.TimeOuterClass.Time.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = seek_.toBuilder();
              }
              seek_ = input.readMessage(msgs.gazebo.msgs.TimeOuterClass.Time.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seek_);
                seek_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              rtFactor_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return msgs.gazebo.msgs.LogPlaybackControlOuterClass.internal_static_gazebo_msgs_LogPlaybackControl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return msgs.gazebo.msgs.LogPlaybackControlOuterClass.internal_static_gazebo_msgs_LogPlaybackControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl.class, msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl.Builder.class);
    }

    private int bitField0_;
    public static final int PAUSE_FIELD_NUMBER = 1;
    private boolean pause_;
    /**
     * <pre>
     *&#47; &#92;brief Pause/play the log file.
     * </pre>
     *
     * <code>optional bool pause = 1;</code>
     * @return Whether the pause field is set.
     */
    @java.lang.Override
    public boolean hasPause() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Pause/play the log file.
     * </pre>
     *
     * <code>optional bool pause = 1;</code>
     * @return The pause.
     */
    @java.lang.Override
    public boolean getPause() {
      return pause_;
    }

    public static final int MULTI_STEP_FIELD_NUMBER = 2;
    private int multiStep_;
    /**
     * <pre>
     *&#47; &#92;brief Make a relative jump. The value indicates the number of
     * /        iterations that will be executed at once. If a negative
     * /        value is specified, the playback will jump backwards.
     * </pre>
     *
     * <code>optional sint32 multi_step = 2;</code>
     * @return Whether the multiStep field is set.
     */
    @java.lang.Override
    public boolean hasMultiStep() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Make a relative jump. The value indicates the number of
     * /        iterations that will be executed at once. If a negative
     * /        value is specified, the playback will jump backwards.
     * </pre>
     *
     * <code>optional sint32 multi_step = 2;</code>
     * @return The multiStep.
     */
    @java.lang.Override
    public int getMultiStep() {
      return multiStep_;
    }

    public static final int REWIND_FIELD_NUMBER = 3;
    private boolean rewind_;
    /**
     * <pre>
     *&#47; &#92;brief Jump to the beginning of the log file.
     * </pre>
     *
     * <code>optional bool rewind = 3;</code>
     * @return Whether the rewind field is set.
     */
    @java.lang.Override
    public boolean hasRewind() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Jump to the beginning of the log file.
     * </pre>
     *
     * <code>optional bool rewind = 3;</code>
     * @return The rewind.
     */
    @java.lang.Override
    public boolean getRewind() {
      return rewind_;
    }

    public static final int FORWARD_FIELD_NUMBER = 4;
    private boolean forward_;
    /**
     * <pre>
     *&#47; &#92;brief Jump to the end of the log file.
     * </pre>
     *
     * <code>optional bool forward = 4;</code>
     * @return Whether the forward field is set.
     */
    @java.lang.Override
    public boolean hasForward() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Jump to the end of the log file.
     * </pre>
     *
     * <code>optional bool forward = 4;</code>
     * @return The forward.
     */
    @java.lang.Override
    public boolean getForward() {
      return forward_;
    }

    public static final int SEEK_FIELD_NUMBER = 5;
    private msgs.gazebo.msgs.TimeOuterClass.Time seek_;
    /**
     * <pre>
     *&#47; &#92;brief Jump to a specific simulation time in the log file. The
     * /        playback service will load the frame with the closest
     * /        simulation time bigger than the "seek" value.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Time seek = 5;</code>
     * @return Whether the seek field is set.
     */
    @java.lang.Override
    public boolean hasSeek() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Jump to a specific simulation time in the log file. The
     * /        playback service will load the frame with the closest
     * /        simulation time bigger than the "seek" value.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Time seek = 5;</code>
     * @return The seek.
     */
    @java.lang.Override
    public msgs.gazebo.msgs.TimeOuterClass.Time getSeek() {
      return seek_ == null ? msgs.gazebo.msgs.TimeOuterClass.Time.getDefaultInstance() : seek_;
    }
    /**
     * <pre>
     *&#47; &#92;brief Jump to a specific simulation time in the log file. The
     * /        playback service will load the frame with the closest
     * /        simulation time bigger than the "seek" value.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Time seek = 5;</code>
     */
    @java.lang.Override
    public msgs.gazebo.msgs.TimeOuterClass.TimeOrBuilder getSeekOrBuilder() {
      return seek_ == null ? msgs.gazebo.msgs.TimeOuterClass.Time.getDefaultInstance() : seek_;
    }

    public static final int RT_FACTOR_FIELD_NUMBER = 6;
    private double rtFactor_;
    /**
     * <pre>
     *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
     * </pre>
     *
     * <code>optional double rt_factor = 6;</code>
     * @return Whether the rtFactor field is set.
     */
    @java.lang.Override
    public boolean hasRtFactor() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
     * </pre>
     *
     * <code>optional double rt_factor = 6;</code>
     * @return The rtFactor.
     */
    @java.lang.Override
    public double getRtFactor() {
      return rtFactor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasSeek()) {
        if (!getSeek().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, pause_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeSInt32(2, multiStep_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, rewind_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, forward_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(5, getSeek());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, rtFactor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, pause_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, multiStep_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, rewind_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, forward_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSeek());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, rtFactor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl)) {
        return super.equals(obj);
      }
      msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl other = (msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl) obj;

      if (hasPause() != other.hasPause()) return false;
      if (hasPause()) {
        if (getPause()
            != other.getPause()) return false;
      }
      if (hasMultiStep() != other.hasMultiStep()) return false;
      if (hasMultiStep()) {
        if (getMultiStep()
            != other.getMultiStep()) return false;
      }
      if (hasRewind() != other.hasRewind()) return false;
      if (hasRewind()) {
        if (getRewind()
            != other.getRewind()) return false;
      }
      if (hasForward() != other.hasForward()) return false;
      if (hasForward()) {
        if (getForward()
            != other.getForward()) return false;
      }
      if (hasSeek() != other.hasSeek()) return false;
      if (hasSeek()) {
        if (!getSeek()
            .equals(other.getSeek())) return false;
      }
      if (hasRtFactor() != other.hasRtFactor()) return false;
      if (hasRtFactor()) {
        if (java.lang.Double.doubleToLongBits(getRtFactor())
            != java.lang.Double.doubleToLongBits(
                other.getRtFactor())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPause()) {
        hash = (37 * hash) + PAUSE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPause());
      }
      if (hasMultiStep()) {
        hash = (37 * hash) + MULTI_STEP_FIELD_NUMBER;
        hash = (53 * hash) + getMultiStep();
      }
      if (hasRewind()) {
        hash = (37 * hash) + REWIND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRewind());
      }
      if (hasForward()) {
        hash = (37 * hash) + FORWARD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getForward());
      }
      if (hasSeek()) {
        hash = (37 * hash) + SEEK_FIELD_NUMBER;
        hash = (53 * hash) + getSeek().hashCode();
      }
      if (hasRtFactor()) {
        hash = (37 * hash) + RT_FACTOR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRtFactor()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.LogPlaybackControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.LogPlaybackControl)
        msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return msgs.gazebo.msgs.LogPlaybackControlOuterClass.internal_static_gazebo_msgs_LogPlaybackControl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return msgs.gazebo.msgs.LogPlaybackControlOuterClass.internal_static_gazebo_msgs_LogPlaybackControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl.class, msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl.Builder.class);
      }

      // Construct using gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSeekFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pause_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        multiStep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rewind_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        forward_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (seekBuilder_ == null) {
          seek_ = null;
        } else {
          seekBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        rtFactor_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return msgs.gazebo.msgs.LogPlaybackControlOuterClass.internal_static_gazebo_msgs_LogPlaybackControl_descriptor;
      }

      @java.lang.Override
      public msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl getDefaultInstanceForType() {
        return msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl.getDefaultInstance();
      }

      @java.lang.Override
      public msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl build() {
        msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl buildPartial() {
        msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl result = new msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pause_ = pause_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.multiStep_ = multiStep_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rewind_ = rewind_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.forward_ = forward_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (seekBuilder_ == null) {
            result.seek_ = seek_;
          } else {
            result.seek_ = seekBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.rtFactor_ = rtFactor_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl) {
          return mergeFrom((msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl other) {
        if (other == msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl.getDefaultInstance()) return this;
        if (other.hasPause()) {
          setPause(other.getPause());
        }
        if (other.hasMultiStep()) {
          setMultiStep(other.getMultiStep());
        }
        if (other.hasRewind()) {
          setRewind(other.getRewind());
        }
        if (other.hasForward()) {
          setForward(other.getForward());
        }
        if (other.hasSeek()) {
          mergeSeek(other.getSeek());
        }
        if (other.hasRtFactor()) {
          setRtFactor(other.getRtFactor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasSeek()) {
          if (!getSeek().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean pause_ ;
      /**
       * <pre>
       *&#47; &#92;brief Pause/play the log file.
       * </pre>
       *
       * <code>optional bool pause = 1;</code>
       * @return Whether the pause field is set.
       */
      @java.lang.Override
      public boolean hasPause() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Pause/play the log file.
       * </pre>
       *
       * <code>optional bool pause = 1;</code>
       * @return The pause.
       */
      @java.lang.Override
      public boolean getPause() {
        return pause_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Pause/play the log file.
       * </pre>
       *
       * <code>optional bool pause = 1;</code>
       * @param value The pause to set.
       * @return This builder for chaining.
       */
      public Builder setPause(boolean value) {
        bitField0_ |= 0x00000001;
        pause_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Pause/play the log file.
       * </pre>
       *
       * <code>optional bool pause = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPause() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pause_ = false;
        onChanged();
        return this;
      }

      private int multiStep_ ;
      /**
       * <pre>
       *&#47; &#92;brief Make a relative jump. The value indicates the number of
       * /        iterations that will be executed at once. If a negative
       * /        value is specified, the playback will jump backwards.
       * </pre>
       *
       * <code>optional sint32 multi_step = 2;</code>
       * @return Whether the multiStep field is set.
       */
      @java.lang.Override
      public boolean hasMultiStep() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Make a relative jump. The value indicates the number of
       * /        iterations that will be executed at once. If a negative
       * /        value is specified, the playback will jump backwards.
       * </pre>
       *
       * <code>optional sint32 multi_step = 2;</code>
       * @return The multiStep.
       */
      @java.lang.Override
      public int getMultiStep() {
        return multiStep_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Make a relative jump. The value indicates the number of
       * /        iterations that will be executed at once. If a negative
       * /        value is specified, the playback will jump backwards.
       * </pre>
       *
       * <code>optional sint32 multi_step = 2;</code>
       * @param value The multiStep to set.
       * @return This builder for chaining.
       */
      public Builder setMultiStep(int value) {
        bitField0_ |= 0x00000002;
        multiStep_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Make a relative jump. The value indicates the number of
       * /        iterations that will be executed at once. If a negative
       * /        value is specified, the playback will jump backwards.
       * </pre>
       *
       * <code>optional sint32 multi_step = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMultiStep() {
        bitField0_ = (bitField0_ & ~0x00000002);
        multiStep_ = 0;
        onChanged();
        return this;
      }

      private boolean rewind_ ;
      /**
       * <pre>
       *&#47; &#92;brief Jump to the beginning of the log file.
       * </pre>
       *
       * <code>optional bool rewind = 3;</code>
       * @return Whether the rewind field is set.
       */
      @java.lang.Override
      public boolean hasRewind() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to the beginning of the log file.
       * </pre>
       *
       * <code>optional bool rewind = 3;</code>
       * @return The rewind.
       */
      @java.lang.Override
      public boolean getRewind() {
        return rewind_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to the beginning of the log file.
       * </pre>
       *
       * <code>optional bool rewind = 3;</code>
       * @param value The rewind to set.
       * @return This builder for chaining.
       */
      public Builder setRewind(boolean value) {
        bitField0_ |= 0x00000004;
        rewind_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to the beginning of the log file.
       * </pre>
       *
       * <code>optional bool rewind = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRewind() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rewind_ = false;
        onChanged();
        return this;
      }

      private boolean forward_ ;
      /**
       * <pre>
       *&#47; &#92;brief Jump to the end of the log file.
       * </pre>
       *
       * <code>optional bool forward = 4;</code>
       * @return Whether the forward field is set.
       */
      @java.lang.Override
      public boolean hasForward() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to the end of the log file.
       * </pre>
       *
       * <code>optional bool forward = 4;</code>
       * @return The forward.
       */
      @java.lang.Override
      public boolean getForward() {
        return forward_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to the end of the log file.
       * </pre>
       *
       * <code>optional bool forward = 4;</code>
       * @param value The forward to set.
       * @return This builder for chaining.
       */
      public Builder setForward(boolean value) {
        bitField0_ |= 0x00000008;
        forward_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to the end of the log file.
       * </pre>
       *
       * <code>optional bool forward = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearForward() {
        bitField0_ = (bitField0_ & ~0x00000008);
        forward_ = false;
        onChanged();
        return this;
      }

      private msgs.gazebo.msgs.TimeOuterClass.Time seek_;
      private com.google.protobuf.SingleFieldBuilderV3<
          msgs.gazebo.msgs.TimeOuterClass.Time, msgs.gazebo.msgs.TimeOuterClass.Time.Builder, msgs.gazebo.msgs.TimeOuterClass.TimeOrBuilder> seekBuilder_;
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       * @return Whether the seek field is set.
       */
      public boolean hasSeek() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       * @return The seek.
       */
      public msgs.gazebo.msgs.TimeOuterClass.Time getSeek() {
        if (seekBuilder_ == null) {
          return seek_ == null ? msgs.gazebo.msgs.TimeOuterClass.Time.getDefaultInstance() : seek_;
        } else {
          return seekBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       */
      public Builder setSeek(msgs.gazebo.msgs.TimeOuterClass.Time value) {
        if (seekBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seek_ = value;
          onChanged();
        } else {
          seekBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       */
      public Builder setSeek(
          msgs.gazebo.msgs.TimeOuterClass.Time.Builder builderForValue) {
        if (seekBuilder_ == null) {
          seek_ = builderForValue.build();
          onChanged();
        } else {
          seekBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       */
      public Builder mergeSeek(msgs.gazebo.msgs.TimeOuterClass.Time value) {
        if (seekBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              seek_ != null &&
              seek_ != msgs.gazebo.msgs.TimeOuterClass.Time.getDefaultInstance()) {
            seek_ =
              msgs.gazebo.msgs.TimeOuterClass.Time.newBuilder(seek_).mergeFrom(value).buildPartial();
          } else {
            seek_ = value;
          }
          onChanged();
        } else {
          seekBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       */
      public Builder clearSeek() {
        if (seekBuilder_ == null) {
          seek_ = null;
          onChanged();
        } else {
          seekBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       */
      public msgs.gazebo.msgs.TimeOuterClass.Time.Builder getSeekBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSeekFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       */
      public msgs.gazebo.msgs.TimeOuterClass.TimeOrBuilder getSeekOrBuilder() {
        if (seekBuilder_ != null) {
          return seekBuilder_.getMessageOrBuilder();
        } else {
          return seek_ == null ?
              msgs.gazebo.msgs.TimeOuterClass.Time.getDefaultInstance() : seek_;
        }
      }
      /**
       * <pre>
       *&#47; &#92;brief Jump to a specific simulation time in the log file. The
       * /        playback service will load the frame with the closest
       * /        simulation time bigger than the "seek" value.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Time seek = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          msgs.gazebo.msgs.TimeOuterClass.Time, msgs.gazebo.msgs.TimeOuterClass.Time.Builder, msgs.gazebo.msgs.TimeOuterClass.TimeOrBuilder> 
          getSeekFieldBuilder() {
        if (seekBuilder_ == null) {
          seekBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              msgs.gazebo.msgs.TimeOuterClass.Time, msgs.gazebo.msgs.TimeOuterClass.Time.Builder, msgs.gazebo.msgs.TimeOuterClass.TimeOrBuilder>(
                  getSeek(),
                  getParentForChildren(),
                  isClean());
          seek_ = null;
        }
        return seekBuilder_;
      }

      private double rtFactor_ ;
      /**
       * <pre>
       *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
       * </pre>
       *
       * <code>optional double rt_factor = 6;</code>
       * @return Whether the rtFactor field is set.
       */
      @java.lang.Override
      public boolean hasRtFactor() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
       * </pre>
       *
       * <code>optional double rt_factor = 6;</code>
       * @return The rtFactor.
       */
      @java.lang.Override
      public double getRtFactor() {
        return rtFactor_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
       * </pre>
       *
       * <code>optional double rt_factor = 6;</code>
       * @param value The rtFactor to set.
       * @return This builder for chaining.
       */
      public Builder setRtFactor(double value) {
        bitField0_ |= 0x00000020;
        rtFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Set the real time factor for log playing, 0.0 will disable it.
       * </pre>
       *
       * <code>optional double rt_factor = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRtFactor() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rtFactor_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:gazebo.msgs.LogPlaybackControl)
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.LogPlaybackControl)
    private static final msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl();
    }

    public static msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LogPlaybackControl>
        PARSER = new com.google.protobuf.AbstractParser<LogPlaybackControl>() {
      @java.lang.Override
      public LogPlaybackControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogPlaybackControl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogPlaybackControl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogPlaybackControl> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public msgs.gazebo.msgs.LogPlaybackControlOuterClass.LogPlaybackControl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_LogPlaybackControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_LogPlaybackControl_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032log_playback_control.proto\022\013gazebo.msg" +
      "s\032\ntime.proto\"\214\001\n\022LogPlaybackControl\022\r\n\005" +
      "pause\030\001 \001(\010\022\022\n\nmulti_step\030\002 \001(\021\022\016\n\006rewin" +
      "d\030\003 \001(\010\022\017\n\007forward\030\004 \001(\010\022\037\n\004seek\030\005 \001(\0132\021" +
      ".gazebo.msgs.Time\022\021\n\trt_factor\030\006 \001(\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          msgs.gazebo.msgs.TimeOuterClass.getDescriptor(),
        });
    internal_static_gazebo_msgs_LogPlaybackControl_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_LogPlaybackControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_LogPlaybackControl_descriptor,
        new java.lang.String[] { "Pause", "MultiStep", "Rewind", "Forward", "Seek", "RtFactor", });
    msgs.gazebo.msgs.TimeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
