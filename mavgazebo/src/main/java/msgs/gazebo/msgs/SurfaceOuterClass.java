// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: surface.proto

package msgs.gazebo.msgs;

public final class SurfaceOuterClass {
  private SurfaceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SurfaceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.Surface)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .gazebo.msgs.Friction friction = 1;</code>
     * @return Whether the friction field is set.
     */
    boolean hasFriction();
    /**
     * <code>optional .gazebo.msgs.Friction friction = 1;</code>
     * @return The friction.
     */
    msgs.gazebo.msgs.FrictionOuterClass.Friction getFriction();
    /**
     * <code>optional .gazebo.msgs.Friction friction = 1;</code>
     */
    msgs.gazebo.msgs.FrictionOuterClass.FrictionOrBuilder getFrictionOrBuilder();

    /**
     * <code>optional double restitution_coefficient = 2;</code>
     * @return Whether the restitutionCoefficient field is set.
     */
    boolean hasRestitutionCoefficient();
    /**
     * <code>optional double restitution_coefficient = 2;</code>
     * @return The restitutionCoefficient.
     */
    double getRestitutionCoefficient();

    /**
     * <code>optional double bounce_threshold = 3;</code>
     * @return Whether the bounceThreshold field is set.
     */
    boolean hasBounceThreshold();
    /**
     * <code>optional double bounce_threshold = 3;</code>
     * @return The bounceThreshold.
     */
    double getBounceThreshold();

    /**
     * <code>optional double soft_cfm = 4;</code>
     * @return Whether the softCfm field is set.
     */
    boolean hasSoftCfm();
    /**
     * <code>optional double soft_cfm = 4;</code>
     * @return The softCfm.
     */
    double getSoftCfm();

    /**
     * <code>optional double soft_erp = 5;</code>
     * @return Whether the softErp field is set.
     */
    boolean hasSoftErp();
    /**
     * <code>optional double soft_erp = 5;</code>
     * @return The softErp.
     */
    double getSoftErp();

    /**
     * <code>optional double kp = 6;</code>
     * @return Whether the kp field is set.
     */
    boolean hasKp();
    /**
     * <code>optional double kp = 6;</code>
     * @return The kp.
     */
    double getKp();

    /**
     * <code>optional double kd = 7;</code>
     * @return Whether the kd field is set.
     */
    boolean hasKd();
    /**
     * <code>optional double kd = 7;</code>
     * @return The kd.
     */
    double getKd();

    /**
     * <code>optional double max_vel = 8;</code>
     * @return Whether the maxVel field is set.
     */
    boolean hasMaxVel();
    /**
     * <code>optional double max_vel = 8;</code>
     * @return The maxVel.
     */
    double getMaxVel();

    /**
     * <code>optional double min_depth = 9;</code>
     * @return Whether the minDepth field is set.
     */
    boolean hasMinDepth();
    /**
     * <code>optional double min_depth = 9;</code>
     * @return The minDepth.
     */
    double getMinDepth();

    /**
     * <code>optional bool collide_without_contact = 10;</code>
     * @return Whether the collideWithoutContact field is set.
     */
    boolean hasCollideWithoutContact();
    /**
     * <code>optional bool collide_without_contact = 10;</code>
     * @return The collideWithoutContact.
     */
    boolean getCollideWithoutContact();

    /**
     * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
     * @return Whether the collideWithoutContactBitmask field is set.
     */
    boolean hasCollideWithoutContactBitmask();
    /**
     * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
     * @return The collideWithoutContactBitmask.
     */
    int getCollideWithoutContactBitmask();

    /**
     * <code>optional uint32 collide_bitmask = 12;</code>
     * @return Whether the collideBitmask field is set.
     */
    boolean hasCollideBitmask();
    /**
     * <code>optional uint32 collide_bitmask = 12;</code>
     * @return The collideBitmask.
     */
    int getCollideBitmask();

    /**
     * <code>optional double elastic_modulus = 13;</code>
     * @return Whether the elasticModulus field is set.
     */
    boolean hasElasticModulus();
    /**
     * <code>optional double elastic_modulus = 13;</code>
     * @return The elasticModulus.
     */
    double getElasticModulus();
  }
  /**
   * Protobuf type {@code gazebo.msgs.Surface}
   */
  public static final class Surface extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.Surface)
      SurfaceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Surface.newBuilder() to construct.
    private Surface(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Surface() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Surface();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Surface(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              msgs.gazebo.msgs.FrictionOuterClass.Friction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = friction_.toBuilder();
              }
              friction_ = input.readMessage(msgs.gazebo.msgs.FrictionOuterClass.Friction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(friction_);
                friction_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              restitutionCoefficient_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              bounceThreshold_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              softCfm_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              softErp_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              kp_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              kd_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              maxVel_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              minDepth_ = input.readDouble();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              collideWithoutContact_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              collideWithoutContactBitmask_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              collideBitmask_ = input.readUInt32();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              elasticModulus_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return msgs.gazebo.msgs.SurfaceOuterClass.internal_static_gazebo_msgs_Surface_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return msgs.gazebo.msgs.SurfaceOuterClass.internal_static_gazebo_msgs_Surface_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              msgs.gazebo.msgs.SurfaceOuterClass.Surface.class, msgs.gazebo.msgs.SurfaceOuterClass.Surface.Builder.class);
    }

    private int bitField0_;
    public static final int FRICTION_FIELD_NUMBER = 1;
    private msgs.gazebo.msgs.FrictionOuterClass.Friction friction_;
    /**
     * <code>optional .gazebo.msgs.Friction friction = 1;</code>
     * @return Whether the friction field is set.
     */
    @java.lang.Override
    public boolean hasFriction() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .gazebo.msgs.Friction friction = 1;</code>
     * @return The friction.
     */
    @java.lang.Override
    public msgs.gazebo.msgs.FrictionOuterClass.Friction getFriction() {
      return friction_ == null ? msgs.gazebo.msgs.FrictionOuterClass.Friction.getDefaultInstance() : friction_;
    }
    /**
     * <code>optional .gazebo.msgs.Friction friction = 1;</code>
     */
    @java.lang.Override
    public msgs.gazebo.msgs.FrictionOuterClass.FrictionOrBuilder getFrictionOrBuilder() {
      return friction_ == null ? msgs.gazebo.msgs.FrictionOuterClass.Friction.getDefaultInstance() : friction_;
    }

    public static final int RESTITUTION_COEFFICIENT_FIELD_NUMBER = 2;
    private double restitutionCoefficient_;
    /**
     * <code>optional double restitution_coefficient = 2;</code>
     * @return Whether the restitutionCoefficient field is set.
     */
    @java.lang.Override
    public boolean hasRestitutionCoefficient() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double restitution_coefficient = 2;</code>
     * @return The restitutionCoefficient.
     */
    @java.lang.Override
    public double getRestitutionCoefficient() {
      return restitutionCoefficient_;
    }

    public static final int BOUNCE_THRESHOLD_FIELD_NUMBER = 3;
    private double bounceThreshold_;
    /**
     * <code>optional double bounce_threshold = 3;</code>
     * @return Whether the bounceThreshold field is set.
     */
    @java.lang.Override
    public boolean hasBounceThreshold() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double bounce_threshold = 3;</code>
     * @return The bounceThreshold.
     */
    @java.lang.Override
    public double getBounceThreshold() {
      return bounceThreshold_;
    }

    public static final int SOFT_CFM_FIELD_NUMBER = 4;
    private double softCfm_;
    /**
     * <code>optional double soft_cfm = 4;</code>
     * @return Whether the softCfm field is set.
     */
    @java.lang.Override
    public boolean hasSoftCfm() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double soft_cfm = 4;</code>
     * @return The softCfm.
     */
    @java.lang.Override
    public double getSoftCfm() {
      return softCfm_;
    }

    public static final int SOFT_ERP_FIELD_NUMBER = 5;
    private double softErp_;
    /**
     * <code>optional double soft_erp = 5;</code>
     * @return Whether the softErp field is set.
     */
    @java.lang.Override
    public boolean hasSoftErp() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double soft_erp = 5;</code>
     * @return The softErp.
     */
    @java.lang.Override
    public double getSoftErp() {
      return softErp_;
    }

    public static final int KP_FIELD_NUMBER = 6;
    private double kp_;
    /**
     * <code>optional double kp = 6;</code>
     * @return Whether the kp field is set.
     */
    @java.lang.Override
    public boolean hasKp() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double kp = 6;</code>
     * @return The kp.
     */
    @java.lang.Override
    public double getKp() {
      return kp_;
    }

    public static final int KD_FIELD_NUMBER = 7;
    private double kd_;
    /**
     * <code>optional double kd = 7;</code>
     * @return Whether the kd field is set.
     */
    @java.lang.Override
    public boolean hasKd() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double kd = 7;</code>
     * @return The kd.
     */
    @java.lang.Override
    public double getKd() {
      return kd_;
    }

    public static final int MAX_VEL_FIELD_NUMBER = 8;
    private double maxVel_;
    /**
     * <code>optional double max_vel = 8;</code>
     * @return Whether the maxVel field is set.
     */
    @java.lang.Override
    public boolean hasMaxVel() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional double max_vel = 8;</code>
     * @return The maxVel.
     */
    @java.lang.Override
    public double getMaxVel() {
      return maxVel_;
    }

    public static final int MIN_DEPTH_FIELD_NUMBER = 9;
    private double minDepth_;
    /**
     * <code>optional double min_depth = 9;</code>
     * @return Whether the minDepth field is set.
     */
    @java.lang.Override
    public boolean hasMinDepth() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional double min_depth = 9;</code>
     * @return The minDepth.
     */
    @java.lang.Override
    public double getMinDepth() {
      return minDepth_;
    }

    public static final int COLLIDE_WITHOUT_CONTACT_FIELD_NUMBER = 10;
    private boolean collideWithoutContact_;
    /**
     * <code>optional bool collide_without_contact = 10;</code>
     * @return Whether the collideWithoutContact field is set.
     */
    @java.lang.Override
    public boolean hasCollideWithoutContact() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional bool collide_without_contact = 10;</code>
     * @return The collideWithoutContact.
     */
    @java.lang.Override
    public boolean getCollideWithoutContact() {
      return collideWithoutContact_;
    }

    public static final int COLLIDE_WITHOUT_CONTACT_BITMASK_FIELD_NUMBER = 11;
    private int collideWithoutContactBitmask_;
    /**
     * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
     * @return Whether the collideWithoutContactBitmask field is set.
     */
    @java.lang.Override
    public boolean hasCollideWithoutContactBitmask() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
     * @return The collideWithoutContactBitmask.
     */
    @java.lang.Override
    public int getCollideWithoutContactBitmask() {
      return collideWithoutContactBitmask_;
    }

    public static final int COLLIDE_BITMASK_FIELD_NUMBER = 12;
    private int collideBitmask_;
    /**
     * <code>optional uint32 collide_bitmask = 12;</code>
     * @return Whether the collideBitmask field is set.
     */
    @java.lang.Override
    public boolean hasCollideBitmask() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional uint32 collide_bitmask = 12;</code>
     * @return The collideBitmask.
     */
    @java.lang.Override
    public int getCollideBitmask() {
      return collideBitmask_;
    }

    public static final int ELASTIC_MODULUS_FIELD_NUMBER = 13;
    private double elasticModulus_;
    /**
     * <code>optional double elastic_modulus = 13;</code>
     * @return Whether the elasticModulus field is set.
     */
    @java.lang.Override
    public boolean hasElasticModulus() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional double elastic_modulus = 13;</code>
     * @return The elasticModulus.
     */
    @java.lang.Override
    public double getElasticModulus() {
      return elasticModulus_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasFriction()) {
        if (!getFriction().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getFriction());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, restitutionCoefficient_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, bounceThreshold_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, softCfm_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, softErp_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, kp_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, kd_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, maxVel_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(9, minDepth_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeBool(10, collideWithoutContact_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeUInt32(11, collideWithoutContactBitmask_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt32(12, collideBitmask_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeDouble(13, elasticModulus_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFriction());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, restitutionCoefficient_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, bounceThreshold_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, softCfm_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, softErp_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, kp_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, kd_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, maxVel_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, minDepth_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, collideWithoutContact_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, collideWithoutContactBitmask_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, collideBitmask_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, elasticModulus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof msgs.gazebo.msgs.SurfaceOuterClass.Surface)) {
        return super.equals(obj);
      }
      msgs.gazebo.msgs.SurfaceOuterClass.Surface other = (msgs.gazebo.msgs.SurfaceOuterClass.Surface) obj;

      if (hasFriction() != other.hasFriction()) return false;
      if (hasFriction()) {
        if (!getFriction()
            .equals(other.getFriction())) return false;
      }
      if (hasRestitutionCoefficient() != other.hasRestitutionCoefficient()) return false;
      if (hasRestitutionCoefficient()) {
        if (java.lang.Double.doubleToLongBits(getRestitutionCoefficient())
            != java.lang.Double.doubleToLongBits(
                other.getRestitutionCoefficient())) return false;
      }
      if (hasBounceThreshold() != other.hasBounceThreshold()) return false;
      if (hasBounceThreshold()) {
        if (java.lang.Double.doubleToLongBits(getBounceThreshold())
            != java.lang.Double.doubleToLongBits(
                other.getBounceThreshold())) return false;
      }
      if (hasSoftCfm() != other.hasSoftCfm()) return false;
      if (hasSoftCfm()) {
        if (java.lang.Double.doubleToLongBits(getSoftCfm())
            != java.lang.Double.doubleToLongBits(
                other.getSoftCfm())) return false;
      }
      if (hasSoftErp() != other.hasSoftErp()) return false;
      if (hasSoftErp()) {
        if (java.lang.Double.doubleToLongBits(getSoftErp())
            != java.lang.Double.doubleToLongBits(
                other.getSoftErp())) return false;
      }
      if (hasKp() != other.hasKp()) return false;
      if (hasKp()) {
        if (java.lang.Double.doubleToLongBits(getKp())
            != java.lang.Double.doubleToLongBits(
                other.getKp())) return false;
      }
      if (hasKd() != other.hasKd()) return false;
      if (hasKd()) {
        if (java.lang.Double.doubleToLongBits(getKd())
            != java.lang.Double.doubleToLongBits(
                other.getKd())) return false;
      }
      if (hasMaxVel() != other.hasMaxVel()) return false;
      if (hasMaxVel()) {
        if (java.lang.Double.doubleToLongBits(getMaxVel())
            != java.lang.Double.doubleToLongBits(
                other.getMaxVel())) return false;
      }
      if (hasMinDepth() != other.hasMinDepth()) return false;
      if (hasMinDepth()) {
        if (java.lang.Double.doubleToLongBits(getMinDepth())
            != java.lang.Double.doubleToLongBits(
                other.getMinDepth())) return false;
      }
      if (hasCollideWithoutContact() != other.hasCollideWithoutContact()) return false;
      if (hasCollideWithoutContact()) {
        if (getCollideWithoutContact()
            != other.getCollideWithoutContact()) return false;
      }
      if (hasCollideWithoutContactBitmask() != other.hasCollideWithoutContactBitmask()) return false;
      if (hasCollideWithoutContactBitmask()) {
        if (getCollideWithoutContactBitmask()
            != other.getCollideWithoutContactBitmask()) return false;
      }
      if (hasCollideBitmask() != other.hasCollideBitmask()) return false;
      if (hasCollideBitmask()) {
        if (getCollideBitmask()
            != other.getCollideBitmask()) return false;
      }
      if (hasElasticModulus() != other.hasElasticModulus()) return false;
      if (hasElasticModulus()) {
        if (java.lang.Double.doubleToLongBits(getElasticModulus())
            != java.lang.Double.doubleToLongBits(
                other.getElasticModulus())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFriction()) {
        hash = (37 * hash) + FRICTION_FIELD_NUMBER;
        hash = (53 * hash) + getFriction().hashCode();
      }
      if (hasRestitutionCoefficient()) {
        hash = (37 * hash) + RESTITUTION_COEFFICIENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRestitutionCoefficient()));
      }
      if (hasBounceThreshold()) {
        hash = (37 * hash) + BOUNCE_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBounceThreshold()));
      }
      if (hasSoftCfm()) {
        hash = (37 * hash) + SOFT_CFM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSoftCfm()));
      }
      if (hasSoftErp()) {
        hash = (37 * hash) + SOFT_ERP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSoftErp()));
      }
      if (hasKp()) {
        hash = (37 * hash) + KP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getKp()));
      }
      if (hasKd()) {
        hash = (37 * hash) + KD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getKd()));
      }
      if (hasMaxVel()) {
        hash = (37 * hash) + MAX_VEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxVel()));
      }
      if (hasMinDepth()) {
        hash = (37 * hash) + MIN_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMinDepth()));
      }
      if (hasCollideWithoutContact()) {
        hash = (37 * hash) + COLLIDE_WITHOUT_CONTACT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCollideWithoutContact());
      }
      if (hasCollideWithoutContactBitmask()) {
        hash = (37 * hash) + COLLIDE_WITHOUT_CONTACT_BITMASK_FIELD_NUMBER;
        hash = (53 * hash) + getCollideWithoutContactBitmask();
      }
      if (hasCollideBitmask()) {
        hash = (37 * hash) + COLLIDE_BITMASK_FIELD_NUMBER;
        hash = (53 * hash) + getCollideBitmask();
      }
      if (hasElasticModulus()) {
        hash = (37 * hash) + ELASTIC_MODULUS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getElasticModulus()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(msgs.gazebo.msgs.SurfaceOuterClass.Surface prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Surface}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.Surface)
        msgs.gazebo.msgs.SurfaceOuterClass.SurfaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return msgs.gazebo.msgs.SurfaceOuterClass.internal_static_gazebo_msgs_Surface_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return msgs.gazebo.msgs.SurfaceOuterClass.internal_static_gazebo_msgs_Surface_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                msgs.gazebo.msgs.SurfaceOuterClass.Surface.class, msgs.gazebo.msgs.SurfaceOuterClass.Surface.Builder.class);
      }

      // Construct using gazebo.msgs.SurfaceOuterClass.Surface.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFrictionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (frictionBuilder_ == null) {
          friction_ = null;
        } else {
          frictionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        restitutionCoefficient_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        bounceThreshold_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        softCfm_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        softErp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        kp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        kd_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxVel_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        minDepth_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        collideWithoutContact_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        collideWithoutContactBitmask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        collideBitmask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        elasticModulus_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return msgs.gazebo.msgs.SurfaceOuterClass.internal_static_gazebo_msgs_Surface_descriptor;
      }

      @java.lang.Override
      public msgs.gazebo.msgs.SurfaceOuterClass.Surface getDefaultInstanceForType() {
        return msgs.gazebo.msgs.SurfaceOuterClass.Surface.getDefaultInstance();
      }

      @java.lang.Override
      public msgs.gazebo.msgs.SurfaceOuterClass.Surface build() {
        msgs.gazebo.msgs.SurfaceOuterClass.Surface result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public msgs.gazebo.msgs.SurfaceOuterClass.Surface buildPartial() {
        msgs.gazebo.msgs.SurfaceOuterClass.Surface result = new msgs.gazebo.msgs.SurfaceOuterClass.Surface(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (frictionBuilder_ == null) {
            result.friction_ = friction_;
          } else {
            result.friction_ = frictionBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.restitutionCoefficient_ = restitutionCoefficient_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.bounceThreshold_ = bounceThreshold_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.softCfm_ = softCfm_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.softErp_ = softErp_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.kp_ = kp_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.kd_ = kd_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.maxVel_ = maxVel_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.minDepth_ = minDepth_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.collideWithoutContact_ = collideWithoutContact_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.collideWithoutContactBitmask_ = collideWithoutContactBitmask_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.collideBitmask_ = collideBitmask_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.elasticModulus_ = elasticModulus_;
          to_bitField0_ |= 0x00001000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof msgs.gazebo.msgs.SurfaceOuterClass.Surface) {
          return mergeFrom((msgs.gazebo.msgs.SurfaceOuterClass.Surface)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(msgs.gazebo.msgs.SurfaceOuterClass.Surface other) {
        if (other == msgs.gazebo.msgs.SurfaceOuterClass.Surface.getDefaultInstance()) return this;
        if (other.hasFriction()) {
          mergeFriction(other.getFriction());
        }
        if (other.hasRestitutionCoefficient()) {
          setRestitutionCoefficient(other.getRestitutionCoefficient());
        }
        if (other.hasBounceThreshold()) {
          setBounceThreshold(other.getBounceThreshold());
        }
        if (other.hasSoftCfm()) {
          setSoftCfm(other.getSoftCfm());
        }
        if (other.hasSoftErp()) {
          setSoftErp(other.getSoftErp());
        }
        if (other.hasKp()) {
          setKp(other.getKp());
        }
        if (other.hasKd()) {
          setKd(other.getKd());
        }
        if (other.hasMaxVel()) {
          setMaxVel(other.getMaxVel());
        }
        if (other.hasMinDepth()) {
          setMinDepth(other.getMinDepth());
        }
        if (other.hasCollideWithoutContact()) {
          setCollideWithoutContact(other.getCollideWithoutContact());
        }
        if (other.hasCollideWithoutContactBitmask()) {
          setCollideWithoutContactBitmask(other.getCollideWithoutContactBitmask());
        }
        if (other.hasCollideBitmask()) {
          setCollideBitmask(other.getCollideBitmask());
        }
        if (other.hasElasticModulus()) {
          setElasticModulus(other.getElasticModulus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasFriction()) {
          if (!getFriction().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        msgs.gazebo.msgs.SurfaceOuterClass.Surface parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (msgs.gazebo.msgs.SurfaceOuterClass.Surface) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private msgs.gazebo.msgs.FrictionOuterClass.Friction friction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          msgs.gazebo.msgs.FrictionOuterClass.Friction, msgs.gazebo.msgs.FrictionOuterClass.Friction.Builder, msgs.gazebo.msgs.FrictionOuterClass.FrictionOrBuilder> frictionBuilder_;
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       * @return Whether the friction field is set.
       */
      public boolean hasFriction() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       * @return The friction.
       */
      public msgs.gazebo.msgs.FrictionOuterClass.Friction getFriction() {
        if (frictionBuilder_ == null) {
          return friction_ == null ? msgs.gazebo.msgs.FrictionOuterClass.Friction.getDefaultInstance() : friction_;
        } else {
          return frictionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       */
      public Builder setFriction(msgs.gazebo.msgs.FrictionOuterClass.Friction value) {
        if (frictionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          friction_ = value;
          onChanged();
        } else {
          frictionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       */
      public Builder setFriction(
          msgs.gazebo.msgs.FrictionOuterClass.Friction.Builder builderForValue) {
        if (frictionBuilder_ == null) {
          friction_ = builderForValue.build();
          onChanged();
        } else {
          frictionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       */
      public Builder mergeFriction(msgs.gazebo.msgs.FrictionOuterClass.Friction value) {
        if (frictionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              friction_ != null &&
              friction_ != msgs.gazebo.msgs.FrictionOuterClass.Friction.getDefaultInstance()) {
            friction_ =
              msgs.gazebo.msgs.FrictionOuterClass.Friction.newBuilder(friction_).mergeFrom(value).buildPartial();
          } else {
            friction_ = value;
          }
          onChanged();
        } else {
          frictionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       */
      public Builder clearFriction() {
        if (frictionBuilder_ == null) {
          friction_ = null;
          onChanged();
        } else {
          frictionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       */
      public msgs.gazebo.msgs.FrictionOuterClass.Friction.Builder getFrictionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFrictionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       */
      public msgs.gazebo.msgs.FrictionOuterClass.FrictionOrBuilder getFrictionOrBuilder() {
        if (frictionBuilder_ != null) {
          return frictionBuilder_.getMessageOrBuilder();
        } else {
          return friction_ == null ?
              msgs.gazebo.msgs.FrictionOuterClass.Friction.getDefaultInstance() : friction_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.Friction friction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          msgs.gazebo.msgs.FrictionOuterClass.Friction, msgs.gazebo.msgs.FrictionOuterClass.Friction.Builder, msgs.gazebo.msgs.FrictionOuterClass.FrictionOrBuilder> 
          getFrictionFieldBuilder() {
        if (frictionBuilder_ == null) {
          frictionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              msgs.gazebo.msgs.FrictionOuterClass.Friction, msgs.gazebo.msgs.FrictionOuterClass.Friction.Builder, msgs.gazebo.msgs.FrictionOuterClass.FrictionOrBuilder>(
                  getFriction(),
                  getParentForChildren(),
                  isClean());
          friction_ = null;
        }
        return frictionBuilder_;
      }

      private double restitutionCoefficient_ ;
      /**
       * <code>optional double restitution_coefficient = 2;</code>
       * @return Whether the restitutionCoefficient field is set.
       */
      @java.lang.Override
      public boolean hasRestitutionCoefficient() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double restitution_coefficient = 2;</code>
       * @return The restitutionCoefficient.
       */
      @java.lang.Override
      public double getRestitutionCoefficient() {
        return restitutionCoefficient_;
      }
      /**
       * <code>optional double restitution_coefficient = 2;</code>
       * @param value The restitutionCoefficient to set.
       * @return This builder for chaining.
       */
      public Builder setRestitutionCoefficient(double value) {
        bitField0_ |= 0x00000002;
        restitutionCoefficient_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double restitution_coefficient = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestitutionCoefficient() {
        bitField0_ = (bitField0_ & ~0x00000002);
        restitutionCoefficient_ = 0D;
        onChanged();
        return this;
      }

      private double bounceThreshold_ ;
      /**
       * <code>optional double bounce_threshold = 3;</code>
       * @return Whether the bounceThreshold field is set.
       */
      @java.lang.Override
      public boolean hasBounceThreshold() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double bounce_threshold = 3;</code>
       * @return The bounceThreshold.
       */
      @java.lang.Override
      public double getBounceThreshold() {
        return bounceThreshold_;
      }
      /**
       * <code>optional double bounce_threshold = 3;</code>
       * @param value The bounceThreshold to set.
       * @return This builder for chaining.
       */
      public Builder setBounceThreshold(double value) {
        bitField0_ |= 0x00000004;
        bounceThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bounce_threshold = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBounceThreshold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bounceThreshold_ = 0D;
        onChanged();
        return this;
      }

      private double softCfm_ ;
      /**
       * <code>optional double soft_cfm = 4;</code>
       * @return Whether the softCfm field is set.
       */
      @java.lang.Override
      public boolean hasSoftCfm() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double soft_cfm = 4;</code>
       * @return The softCfm.
       */
      @java.lang.Override
      public double getSoftCfm() {
        return softCfm_;
      }
      /**
       * <code>optional double soft_cfm = 4;</code>
       * @param value The softCfm to set.
       * @return This builder for chaining.
       */
      public Builder setSoftCfm(double value) {
        bitField0_ |= 0x00000008;
        softCfm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double soft_cfm = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSoftCfm() {
        bitField0_ = (bitField0_ & ~0x00000008);
        softCfm_ = 0D;
        onChanged();
        return this;
      }

      private double softErp_ ;
      /**
       * <code>optional double soft_erp = 5;</code>
       * @return Whether the softErp field is set.
       */
      @java.lang.Override
      public boolean hasSoftErp() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double soft_erp = 5;</code>
       * @return The softErp.
       */
      @java.lang.Override
      public double getSoftErp() {
        return softErp_;
      }
      /**
       * <code>optional double soft_erp = 5;</code>
       * @param value The softErp to set.
       * @return This builder for chaining.
       */
      public Builder setSoftErp(double value) {
        bitField0_ |= 0x00000010;
        softErp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double soft_erp = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSoftErp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        softErp_ = 0D;
        onChanged();
        return this;
      }

      private double kp_ ;
      /**
       * <code>optional double kp = 6;</code>
       * @return Whether the kp field is set.
       */
      @java.lang.Override
      public boolean hasKp() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double kp = 6;</code>
       * @return The kp.
       */
      @java.lang.Override
      public double getKp() {
        return kp_;
      }
      /**
       * <code>optional double kp = 6;</code>
       * @param value The kp to set.
       * @return This builder for chaining.
       */
      public Builder setKp(double value) {
        bitField0_ |= 0x00000020;
        kp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double kp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearKp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        kp_ = 0D;
        onChanged();
        return this;
      }

      private double kd_ ;
      /**
       * <code>optional double kd = 7;</code>
       * @return Whether the kd field is set.
       */
      @java.lang.Override
      public boolean hasKd() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double kd = 7;</code>
       * @return The kd.
       */
      @java.lang.Override
      public double getKd() {
        return kd_;
      }
      /**
       * <code>optional double kd = 7;</code>
       * @param value The kd to set.
       * @return This builder for chaining.
       */
      public Builder setKd(double value) {
        bitField0_ |= 0x00000040;
        kd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double kd = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearKd() {
        bitField0_ = (bitField0_ & ~0x00000040);
        kd_ = 0D;
        onChanged();
        return this;
      }

      private double maxVel_ ;
      /**
       * <code>optional double max_vel = 8;</code>
       * @return Whether the maxVel field is set.
       */
      @java.lang.Override
      public boolean hasMaxVel() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double max_vel = 8;</code>
       * @return The maxVel.
       */
      @java.lang.Override
      public double getMaxVel() {
        return maxVel_;
      }
      /**
       * <code>optional double max_vel = 8;</code>
       * @param value The maxVel to set.
       * @return This builder for chaining.
       */
      public Builder setMaxVel(double value) {
        bitField0_ |= 0x00000080;
        maxVel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double max_vel = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxVel() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxVel_ = 0D;
        onChanged();
        return this;
      }

      private double minDepth_ ;
      /**
       * <code>optional double min_depth = 9;</code>
       * @return Whether the minDepth field is set.
       */
      @java.lang.Override
      public boolean hasMinDepth() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional double min_depth = 9;</code>
       * @return The minDepth.
       */
      @java.lang.Override
      public double getMinDepth() {
        return minDepth_;
      }
      /**
       * <code>optional double min_depth = 9;</code>
       * @param value The minDepth to set.
       * @return This builder for chaining.
       */
      public Builder setMinDepth(double value) {
        bitField0_ |= 0x00000100;
        minDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double min_depth = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinDepth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        minDepth_ = 0D;
        onChanged();
        return this;
      }

      private boolean collideWithoutContact_ ;
      /**
       * <code>optional bool collide_without_contact = 10;</code>
       * @return Whether the collideWithoutContact field is set.
       */
      @java.lang.Override
      public boolean hasCollideWithoutContact() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional bool collide_without_contact = 10;</code>
       * @return The collideWithoutContact.
       */
      @java.lang.Override
      public boolean getCollideWithoutContact() {
        return collideWithoutContact_;
      }
      /**
       * <code>optional bool collide_without_contact = 10;</code>
       * @param value The collideWithoutContact to set.
       * @return This builder for chaining.
       */
      public Builder setCollideWithoutContact(boolean value) {
        bitField0_ |= 0x00000200;
        collideWithoutContact_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool collide_without_contact = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollideWithoutContact() {
        bitField0_ = (bitField0_ & ~0x00000200);
        collideWithoutContact_ = false;
        onChanged();
        return this;
      }

      private int collideWithoutContactBitmask_ ;
      /**
       * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
       * @return Whether the collideWithoutContactBitmask field is set.
       */
      @java.lang.Override
      public boolean hasCollideWithoutContactBitmask() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
       * @return The collideWithoutContactBitmask.
       */
      @java.lang.Override
      public int getCollideWithoutContactBitmask() {
        return collideWithoutContactBitmask_;
      }
      /**
       * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
       * @param value The collideWithoutContactBitmask to set.
       * @return This builder for chaining.
       */
      public Builder setCollideWithoutContactBitmask(int value) {
        bitField0_ |= 0x00000400;
        collideWithoutContactBitmask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 collide_without_contact_bitmask = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollideWithoutContactBitmask() {
        bitField0_ = (bitField0_ & ~0x00000400);
        collideWithoutContactBitmask_ = 0;
        onChanged();
        return this;
      }

      private int collideBitmask_ ;
      /**
       * <code>optional uint32 collide_bitmask = 12;</code>
       * @return Whether the collideBitmask field is set.
       */
      @java.lang.Override
      public boolean hasCollideBitmask() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional uint32 collide_bitmask = 12;</code>
       * @return The collideBitmask.
       */
      @java.lang.Override
      public int getCollideBitmask() {
        return collideBitmask_;
      }
      /**
       * <code>optional uint32 collide_bitmask = 12;</code>
       * @param value The collideBitmask to set.
       * @return This builder for chaining.
       */
      public Builder setCollideBitmask(int value) {
        bitField0_ |= 0x00000800;
        collideBitmask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 collide_bitmask = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollideBitmask() {
        bitField0_ = (bitField0_ & ~0x00000800);
        collideBitmask_ = 0;
        onChanged();
        return this;
      }

      private double elasticModulus_ ;
      /**
       * <code>optional double elastic_modulus = 13;</code>
       * @return Whether the elasticModulus field is set.
       */
      @java.lang.Override
      public boolean hasElasticModulus() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional double elastic_modulus = 13;</code>
       * @return The elasticModulus.
       */
      @java.lang.Override
      public double getElasticModulus() {
        return elasticModulus_;
      }
      /**
       * <code>optional double elastic_modulus = 13;</code>
       * @param value The elasticModulus to set.
       * @return This builder for chaining.
       */
      public Builder setElasticModulus(double value) {
        bitField0_ |= 0x00001000;
        elasticModulus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double elastic_modulus = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearElasticModulus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        elasticModulus_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Surface)
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Surface)
    private static final msgs.gazebo.msgs.SurfaceOuterClass.Surface DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new msgs.gazebo.msgs.SurfaceOuterClass.Surface();
    }

    public static msgs.gazebo.msgs.SurfaceOuterClass.Surface getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Surface>
        PARSER = new com.google.protobuf.AbstractParser<Surface>() {
      @java.lang.Override
      public Surface parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Surface(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Surface> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Surface> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public msgs.gazebo.msgs.SurfaceOuterClass.Surface getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Surface_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_Surface_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rsurface.proto\022\013gazebo.msgs\032\016friction.p" +
      "roto\"\311\002\n\007Surface\022\'\n\010friction\030\001 \001(\0132\025.gaz" +
      "ebo.msgs.Friction\022\037\n\027restitution_coeffic" +
      "ient\030\002 \001(\001\022\030\n\020bounce_threshold\030\003 \001(\001\022\020\n\010" +
      "soft_cfm\030\004 \001(\001\022\020\n\010soft_erp\030\005 \001(\001\022\n\n\002kp\030\006" +
      " \001(\001\022\n\n\002kd\030\007 \001(\001\022\017\n\007max_vel\030\010 \001(\001\022\021\n\tmin" +
      "_depth\030\t \001(\001\022\037\n\027collide_without_contact\030" +
      "\n \001(\010\022\'\n\037collide_without_contact_bitmask" +
      "\030\013 \001(\r\022\027\n\017collide_bitmask\030\014 \001(\r\022\027\n\017elast" +
      "ic_modulus\030\r \001(\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          msgs.gazebo.msgs.FrictionOuterClass.getDescriptor(),
        });
    internal_static_gazebo_msgs_Surface_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_Surface_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_Surface_descriptor,
        new java.lang.String[] { "Friction", "RestitutionCoefficient", "BounceThreshold", "SoftCfm", "SoftErp", "Kp", "Kd", "MaxVel", "MinDepth", "CollideWithoutContact", "CollideWithoutContactBitmask", "CollideBitmask", "ElasticModulus", });
    msgs.gazebo.msgs.FrictionOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
