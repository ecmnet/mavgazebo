// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friction.proto

package gazebo.msgs;

public final class FrictionOuterClass {
  private FrictionOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FrictionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.Friction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; &#92;brief Coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu = 1;</code>
     * @return Whether the mu field is set.
     */
    boolean hasMu();
    /**
     * <pre>
     *&#47; &#92;brief Coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu = 1;</code>
     * @return The mu.
     */
    double getMu();

    /**
     * <pre>
     *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu2 = 2;</code>
     * @return Whether the mu2 field is set.
     */
    boolean hasMu2();
    /**
     * <pre>
     *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu2 = 2;</code>
     * @return The mu2.
     */
    double getMu2();

    /**
     * <pre>
     *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
     * @return Whether the fdir1 field is set.
     */
    boolean hasFdir1();
    /**
     * <pre>
     *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
     * @return The fdir1.
     */
    gazebo.msgs.Vector3D.Vector3d getFdir1();
    /**
     * <pre>
     *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
     */
    gazebo.msgs.Vector3D.Vector3dOrBuilder getFdir1OrBuilder();

    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip1 = 4;</code>
     * @return Whether the slip1 field is set.
     */
    boolean hasSlip1();
    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip1 = 4;</code>
     * @return The slip1.
     */
    double getSlip1();

    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip2 = 5;</code>
     * @return Whether the slip2 field is set.
     */
    boolean hasSlip2();
    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip2 = 5;</code>
     * @return The slip2.
     */
    double getSlip2();

    /**
     * <pre>
     *&#47; &#92;brief Torsional friction.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
     * @return Whether the torsional field is set.
     */
    boolean hasTorsional();
    /**
     * <pre>
     *&#47; &#92;brief Torsional friction.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
     * @return The torsional.
     */
    gazebo.msgs.FrictionOuterClass.Friction.Torsional getTorsional();
    /**
     * <pre>
     *&#47; &#92;brief Torsional friction.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
     */
    gazebo.msgs.FrictionOuterClass.Friction.TorsionalOrBuilder getTorsionalOrBuilder();
  }
  /**
   * Protobuf type {@code gazebo.msgs.Friction}
   */
  public static final class Friction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.Friction)
      FrictionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Friction.newBuilder() to construct.
    private Friction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Friction() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Friction();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gazebo.msgs.FrictionOuterClass.Friction.class, gazebo.msgs.FrictionOuterClass.Friction.Builder.class);
    }

    public interface TorsionalOrBuilder extends
        // @@protoc_insertion_point(interface_extends:gazebo.msgs.Friction.Torsional)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double coefficient = 1;</code>
       * @return Whether the coefficient field is set.
       */
      boolean hasCoefficient();
      /**
       * <pre>
       *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double coefficient = 1;</code>
       * @return The coefficient.
       */
      double getCoefficient();

      /**
       * <pre>
       *&#47; &#92;brief By default, torsional friction is calculated using the
       * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
       * / collision at the contact point (surface_radius) and "d" is the contact
       * / depth. If this flag is set to false, surface_radius and contact depth
       * / will be used instead of patch radius.
       * </pre>
       *
       * <code>optional bool use_patch_radius = 2;</code>
       * @return Whether the usePatchRadius field is set.
       */
      boolean hasUsePatchRadius();
      /**
       * <pre>
       *&#47; &#92;brief By default, torsional friction is calculated using the
       * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
       * / collision at the contact point (surface_radius) and "d" is the contact
       * / depth. If this flag is set to false, surface_radius and contact depth
       * / will be used instead of patch radius.
       * </pre>
       *
       * <code>optional bool use_patch_radius = 2;</code>
       * @return The usePatchRadius.
       */
      boolean getUsePatchRadius();

      /**
       * <pre>
       *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
       * </pre>
       *
       * <code>optional double patch_radius = 3;</code>
       * @return Whether the patchRadius field is set.
       */
      boolean hasPatchRadius();
      /**
       * <pre>
       *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
       * </pre>
       *
       * <code>optional double patch_radius = 3;</code>
       * @return The patchRadius.
       */
      double getPatchRadius();

      /**
       * <pre>
       *&#47; &#92;brief Surface radius on the point of contact, used for torsional
       * / friction.
       * </pre>
       *
       * <code>optional double surface_radius = 4;</code>
       * @return Whether the surfaceRadius field is set.
       */
      boolean hasSurfaceRadius();
      /**
       * <pre>
       *&#47; &#92;brief Surface radius on the point of contact, used for torsional
       * / friction.
       * </pre>
       *
       * <code>optional double surface_radius = 4;</code>
       * @return The surfaceRadius.
       */
      double getSurfaceRadius();

      /**
       * <pre>
       *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
       * @return Whether the ode field is set.
       */
      boolean hasOde();
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
       * @return The ode.
       */
      gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE getOde();
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
       */
      gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODEOrBuilder getOdeOrBuilder();
    }
    /**
     * Protobuf type {@code gazebo.msgs.Friction.Torsional}
     */
    public static final class Torsional extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:gazebo.msgs.Friction.Torsional)
        TorsionalOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Torsional.newBuilder() to construct.
      private Torsional(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Torsional() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Torsional();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.FrictionOuterClass.Friction.Torsional.class, gazebo.msgs.FrictionOuterClass.Friction.Torsional.Builder.class);
      }

      public interface ODEOrBuilder extends
          // @@protoc_insertion_point(interface_extends:gazebo.msgs.Friction.Torsional.ODE)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *&#47; &#92;brief Force dependent slip for torsional friction, between the range
         * / of [0..1].
         * </pre>
         *
         * <code>optional double slip = 1;</code>
         * @return Whether the slip field is set.
         */
        boolean hasSlip();
        /**
         * <pre>
         *&#47; &#92;brief Force dependent slip for torsional friction, between the range
         * / of [0..1].
         * </pre>
         *
         * <code>optional double slip = 1;</code>
         * @return The slip.
         */
        double getSlip();
      }
      /**
       * Protobuf type {@code gazebo.msgs.Friction.Torsional.ODE}
       */
      public static final class ODE extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:gazebo.msgs.Friction.Torsional.ODE)
          ODEOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ODE.newBuilder() to construct.
        private ODE(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ODE() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ODE();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_ODE_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_ODE_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.class, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.Builder.class);
        }

        private int bitField0_;
        public static final int SLIP_FIELD_NUMBER = 1;
        private double slip_ = 0D;
        /**
         * <pre>
         *&#47; &#92;brief Force dependent slip for torsional friction, between the range
         * / of [0..1].
         * </pre>
         *
         * <code>optional double slip = 1;</code>
         * @return Whether the slip field is set.
         */
        @java.lang.Override
        public boolean hasSlip() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief Force dependent slip for torsional friction, between the range
         * / of [0..1].
         * </pre>
         *
         * <code>optional double slip = 1;</code>
         * @return The slip.
         */
        @java.lang.Override
        public double getSlip() {
          return slip_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeDouble(1, slip_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(1, slip_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE)) {
            return super.equals(obj);
          }
          gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE other = (gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE) obj;

          if (hasSlip() != other.hasSlip()) return false;
          if (hasSlip()) {
            if (java.lang.Double.doubleToLongBits(getSlip())
                != java.lang.Double.doubleToLongBits(
                    other.getSlip())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasSlip()) {
            hash = (37 * hash) + SLIP_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getSlip()));
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code gazebo.msgs.Friction.Torsional.ODE}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:gazebo.msgs.Friction.Torsional.ODE)
            gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODEOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_ODE_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_ODE_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.class, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.Builder.class);
          }

          // Construct using gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            slip_ = 0D;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_ODE_descriptor;
          }

          @java.lang.Override
          public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE getDefaultInstanceForType() {
            return gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.getDefaultInstance();
          }

          @java.lang.Override
          public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE build() {
            gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE buildPartial() {
            gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE result = new gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.slip_ = slip_;
              to_bitField0_ |= 0x00000001;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE) {
              return mergeFrom((gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE other) {
            if (other == gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.getDefaultInstance()) return this;
            if (other.hasSlip()) {
              setSlip(other.getSlip());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 9: {
                    slip_ = input.readDouble();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 9
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private double slip_ ;
          /**
           * <pre>
           *&#47; &#92;brief Force dependent slip for torsional friction, between the range
           * / of [0..1].
           * </pre>
           *
           * <code>optional double slip = 1;</code>
           * @return Whether the slip field is set.
           */
          @java.lang.Override
          public boolean hasSlip() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           *&#47; &#92;brief Force dependent slip for torsional friction, between the range
           * / of [0..1].
           * </pre>
           *
           * <code>optional double slip = 1;</code>
           * @return The slip.
           */
          @java.lang.Override
          public double getSlip() {
            return slip_;
          }
          /**
           * <pre>
           *&#47; &#92;brief Force dependent slip for torsional friction, between the range
           * / of [0..1].
           * </pre>
           *
           * <code>optional double slip = 1;</code>
           * @param value The slip to set.
           * @return This builder for chaining.
           */
          public Builder setSlip(double value) {
            
            slip_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *&#47; &#92;brief Force dependent slip for torsional friction, between the range
           * / of [0..1].
           * </pre>
           *
           * <code>optional double slip = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearSlip() {
            bitField0_ = (bitField0_ & ~0x00000001);
            slip_ = 0D;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:gazebo.msgs.Friction.Torsional.ODE)
        }

        // @@protoc_insertion_point(class_scope:gazebo.msgs.Friction.Torsional.ODE)
        private static final gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE();
        }

        public static gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ODE>
            PARSER = new com.google.protobuf.AbstractParser<ODE>() {
          @java.lang.Override
          public ODE parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<ODE> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ODE> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int COEFFICIENT_FIELD_NUMBER = 1;
      private double coefficient_ = 0D;
      /**
       * <pre>
       *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double coefficient = 1;</code>
       * @return Whether the coefficient field is set.
       */
      @java.lang.Override
      public boolean hasCoefficient() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double coefficient = 1;</code>
       * @return The coefficient.
       */
      @java.lang.Override
      public double getCoefficient() {
        return coefficient_;
      }

      public static final int USE_PATCH_RADIUS_FIELD_NUMBER = 2;
      private boolean usePatchRadius_ = false;
      /**
       * <pre>
       *&#47; &#92;brief By default, torsional friction is calculated using the
       * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
       * / collision at the contact point (surface_radius) and "d" is the contact
       * / depth. If this flag is set to false, surface_radius and contact depth
       * / will be used instead of patch radius.
       * </pre>
       *
       * <code>optional bool use_patch_radius = 2;</code>
       * @return Whether the usePatchRadius field is set.
       */
      @java.lang.Override
      public boolean hasUsePatchRadius() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief By default, torsional friction is calculated using the
       * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
       * / collision at the contact point (surface_radius) and "d" is the contact
       * / depth. If this flag is set to false, surface_radius and contact depth
       * / will be used instead of patch radius.
       * </pre>
       *
       * <code>optional bool use_patch_radius = 2;</code>
       * @return The usePatchRadius.
       */
      @java.lang.Override
      public boolean getUsePatchRadius() {
        return usePatchRadius_;
      }

      public static final int PATCH_RADIUS_FIELD_NUMBER = 3;
      private double patchRadius_ = 0D;
      /**
       * <pre>
       *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
       * </pre>
       *
       * <code>optional double patch_radius = 3;</code>
       * @return Whether the patchRadius field is set.
       */
      @java.lang.Override
      public boolean hasPatchRadius() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
       * </pre>
       *
       * <code>optional double patch_radius = 3;</code>
       * @return The patchRadius.
       */
      @java.lang.Override
      public double getPatchRadius() {
        return patchRadius_;
      }

      public static final int SURFACE_RADIUS_FIELD_NUMBER = 4;
      private double surfaceRadius_ = 0D;
      /**
       * <pre>
       *&#47; &#92;brief Surface radius on the point of contact, used for torsional
       * / friction.
       * </pre>
       *
       * <code>optional double surface_radius = 4;</code>
       * @return Whether the surfaceRadius field is set.
       */
      @java.lang.Override
      public boolean hasSurfaceRadius() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Surface radius on the point of contact, used for torsional
       * / friction.
       * </pre>
       *
       * <code>optional double surface_radius = 4;</code>
       * @return The surfaceRadius.
       */
      @java.lang.Override
      public double getSurfaceRadius() {
        return surfaceRadius_;
      }

      public static final int ODE_FIELD_NUMBER = 5;
      private gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE ode_;
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
       * @return Whether the ode field is set.
       */
      @java.lang.Override
      public boolean hasOde() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
       * @return The ode.
       */
      @java.lang.Override
      public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE getOde() {
        return ode_ == null ? gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.getDefaultInstance() : ode_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
       */
      @java.lang.Override
      public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODEOrBuilder getOdeOrBuilder() {
        return ode_ == null ? gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.getDefaultInstance() : ode_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeDouble(1, coefficient_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(2, usePatchRadius_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeDouble(3, patchRadius_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeDouble(4, surfaceRadius_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeMessage(5, getOde());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, coefficient_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, usePatchRadius_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, patchRadius_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, surfaceRadius_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getOde());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof gazebo.msgs.FrictionOuterClass.Friction.Torsional)) {
          return super.equals(obj);
        }
        gazebo.msgs.FrictionOuterClass.Friction.Torsional other = (gazebo.msgs.FrictionOuterClass.Friction.Torsional) obj;

        if (hasCoefficient() != other.hasCoefficient()) return false;
        if (hasCoefficient()) {
          if (java.lang.Double.doubleToLongBits(getCoefficient())
              != java.lang.Double.doubleToLongBits(
                  other.getCoefficient())) return false;
        }
        if (hasUsePatchRadius() != other.hasUsePatchRadius()) return false;
        if (hasUsePatchRadius()) {
          if (getUsePatchRadius()
              != other.getUsePatchRadius()) return false;
        }
        if (hasPatchRadius() != other.hasPatchRadius()) return false;
        if (hasPatchRadius()) {
          if (java.lang.Double.doubleToLongBits(getPatchRadius())
              != java.lang.Double.doubleToLongBits(
                  other.getPatchRadius())) return false;
        }
        if (hasSurfaceRadius() != other.hasSurfaceRadius()) return false;
        if (hasSurfaceRadius()) {
          if (java.lang.Double.doubleToLongBits(getSurfaceRadius())
              != java.lang.Double.doubleToLongBits(
                  other.getSurfaceRadius())) return false;
        }
        if (hasOde() != other.hasOde()) return false;
        if (hasOde()) {
          if (!getOde()
              .equals(other.getOde())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCoefficient()) {
          hash = (37 * hash) + COEFFICIENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getCoefficient()));
        }
        if (hasUsePatchRadius()) {
          hash = (37 * hash) + USE_PATCH_RADIUS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUsePatchRadius());
        }
        if (hasPatchRadius()) {
          hash = (37 * hash) + PATCH_RADIUS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getPatchRadius()));
        }
        if (hasSurfaceRadius()) {
          hash = (37 * hash) + SURFACE_RADIUS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSurfaceRadius()));
        }
        if (hasOde()) {
          hash = (37 * hash) + ODE_FIELD_NUMBER;
          hash = (53 * hash) + getOde().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(gazebo.msgs.FrictionOuterClass.Friction.Torsional prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code gazebo.msgs.Friction.Torsional}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:gazebo.msgs.Friction.Torsional)
          gazebo.msgs.FrictionOuterClass.Friction.TorsionalOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gazebo.msgs.FrictionOuterClass.Friction.Torsional.class, gazebo.msgs.FrictionOuterClass.Friction.Torsional.Builder.class);
        }

        // Construct using gazebo.msgs.FrictionOuterClass.Friction.Torsional.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getOdeFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          coefficient_ = 0D;
          usePatchRadius_ = false;
          patchRadius_ = 0D;
          surfaceRadius_ = 0D;
          ode_ = null;
          if (odeBuilder_ != null) {
            odeBuilder_.dispose();
            odeBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_Torsional_descriptor;
        }

        @java.lang.Override
        public gazebo.msgs.FrictionOuterClass.Friction.Torsional getDefaultInstanceForType() {
          return gazebo.msgs.FrictionOuterClass.Friction.Torsional.getDefaultInstance();
        }

        @java.lang.Override
        public gazebo.msgs.FrictionOuterClass.Friction.Torsional build() {
          gazebo.msgs.FrictionOuterClass.Friction.Torsional result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public gazebo.msgs.FrictionOuterClass.Friction.Torsional buildPartial() {
          gazebo.msgs.FrictionOuterClass.Friction.Torsional result = new gazebo.msgs.FrictionOuterClass.Friction.Torsional(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(gazebo.msgs.FrictionOuterClass.Friction.Torsional result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.coefficient_ = coefficient_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.usePatchRadius_ = usePatchRadius_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.patchRadius_ = patchRadius_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.surfaceRadius_ = surfaceRadius_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.ode_ = odeBuilder_ == null
                ? ode_
                : odeBuilder_.build();
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gazebo.msgs.FrictionOuterClass.Friction.Torsional) {
            return mergeFrom((gazebo.msgs.FrictionOuterClass.Friction.Torsional)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gazebo.msgs.FrictionOuterClass.Friction.Torsional other) {
          if (other == gazebo.msgs.FrictionOuterClass.Friction.Torsional.getDefaultInstance()) return this;
          if (other.hasCoefficient()) {
            setCoefficient(other.getCoefficient());
          }
          if (other.hasUsePatchRadius()) {
            setUsePatchRadius(other.getUsePatchRadius());
          }
          if (other.hasPatchRadius()) {
            setPatchRadius(other.getPatchRadius());
          }
          if (other.hasSurfaceRadius()) {
            setSurfaceRadius(other.getSurfaceRadius());
          }
          if (other.hasOde()) {
            mergeOde(other.getOde());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  coefficient_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 16: {
                  usePatchRadius_ = input.readBool();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 25: {
                  patchRadius_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                case 33: {
                  surfaceRadius_ = input.readDouble();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 33
                case 42: {
                  input.readMessage(
                      getOdeFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double coefficient_ ;
        /**
         * <pre>
         *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
         * </pre>
         *
         * <code>optional double coefficient = 1;</code>
         * @return Whether the coefficient field is set.
         */
        @java.lang.Override
        public boolean hasCoefficient() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
         * </pre>
         *
         * <code>optional double coefficient = 1;</code>
         * @return The coefficient.
         */
        @java.lang.Override
        public double getCoefficient() {
          return coefficient_;
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
         * </pre>
         *
         * <code>optional double coefficient = 1;</code>
         * @param value The coefficient to set.
         * @return This builder for chaining.
         */
        public Builder setCoefficient(double value) {
          
          coefficient_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional coefficient of friction in the range of [0..1].
         * </pre>
         *
         * <code>optional double coefficient = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCoefficient() {
          bitField0_ = (bitField0_ & ~0x00000001);
          coefficient_ = 0D;
          onChanged();
          return this;
        }

        private boolean usePatchRadius_ ;
        /**
         * <pre>
         *&#47; &#92;brief By default, torsional friction is calculated using the
         * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
         * / collision at the contact point (surface_radius) and "d" is the contact
         * / depth. If this flag is set to false, surface_radius and contact depth
         * / will be used instead of patch radius.
         * </pre>
         *
         * <code>optional bool use_patch_radius = 2;</code>
         * @return Whether the usePatchRadius field is set.
         */
        @java.lang.Override
        public boolean hasUsePatchRadius() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief By default, torsional friction is calculated using the
         * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
         * / collision at the contact point (surface_radius) and "d" is the contact
         * / depth. If this flag is set to false, surface_radius and contact depth
         * / will be used instead of patch radius.
         * </pre>
         *
         * <code>optional bool use_patch_radius = 2;</code>
         * @return The usePatchRadius.
         */
        @java.lang.Override
        public boolean getUsePatchRadius() {
          return usePatchRadius_;
        }
        /**
         * <pre>
         *&#47; &#92;brief By default, torsional friction is calculated using the
         * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
         * / collision at the contact point (surface_radius) and "d" is the contact
         * / depth. If this flag is set to false, surface_radius and contact depth
         * / will be used instead of patch radius.
         * </pre>
         *
         * <code>optional bool use_patch_radius = 2;</code>
         * @param value The usePatchRadius to set.
         * @return This builder for chaining.
         */
        public Builder setUsePatchRadius(boolean value) {
          
          usePatchRadius_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief By default, torsional friction is calculated using the
         * / "patch_radius", which is sqrt(R*d), where "R" is the radius of the
         * / collision at the contact point (surface_radius) and "d" is the contact
         * / depth. If this flag is set to false, surface_radius and contact depth
         * / will be used instead of patch radius.
         * </pre>
         *
         * <code>optional bool use_patch_radius = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearUsePatchRadius() {
          bitField0_ = (bitField0_ & ~0x00000002);
          usePatchRadius_ = false;
          onChanged();
          return this;
        }

        private double patchRadius_ ;
        /**
         * <pre>
         *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
         * </pre>
         *
         * <code>optional double patch_radius = 3;</code>
         * @return Whether the patchRadius field is set.
         */
        @java.lang.Override
        public boolean hasPatchRadius() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
         * </pre>
         *
         * <code>optional double patch_radius = 3;</code>
         * @return The patchRadius.
         */
        @java.lang.Override
        public double getPatchRadius() {
          return patchRadius_;
        }
        /**
         * <pre>
         *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
         * </pre>
         *
         * <code>optional double patch_radius = 3;</code>
         * @param value The patchRadius to set.
         * @return This builder for chaining.
         */
        public Builder setPatchRadius(double value) {
          
          patchRadius_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Radius of contact patch surface, used for torsional friction.
         * </pre>
         *
         * <code>optional double patch_radius = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPatchRadius() {
          bitField0_ = (bitField0_ & ~0x00000004);
          patchRadius_ = 0D;
          onChanged();
          return this;
        }

        private double surfaceRadius_ ;
        /**
         * <pre>
         *&#47; &#92;brief Surface radius on the point of contact, used for torsional
         * / friction.
         * </pre>
         *
         * <code>optional double surface_radius = 4;</code>
         * @return Whether the surfaceRadius field is set.
         */
        @java.lang.Override
        public boolean hasSurfaceRadius() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief Surface radius on the point of contact, used for torsional
         * / friction.
         * </pre>
         *
         * <code>optional double surface_radius = 4;</code>
         * @return The surfaceRadius.
         */
        @java.lang.Override
        public double getSurfaceRadius() {
          return surfaceRadius_;
        }
        /**
         * <pre>
         *&#47; &#92;brief Surface radius on the point of contact, used for torsional
         * / friction.
         * </pre>
         *
         * <code>optional double surface_radius = 4;</code>
         * @param value The surfaceRadius to set.
         * @return This builder for chaining.
         */
        public Builder setSurfaceRadius(double value) {
          
          surfaceRadius_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Surface radius on the point of contact, used for torsional
         * / friction.
         * </pre>
         *
         * <code>optional double surface_radius = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearSurfaceRadius() {
          bitField0_ = (bitField0_ & ~0x00000008);
          surfaceRadius_ = 0D;
          onChanged();
          return this;
        }

        private gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE ode_;
        private com.google.protobuf.SingleFieldBuilderV3<
            gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.Builder, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODEOrBuilder> odeBuilder_;
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         * @return Whether the ode field is set.
         */
        public boolean hasOde() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         * @return The ode.
         */
        public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE getOde() {
          if (odeBuilder_ == null) {
            return ode_ == null ? gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.getDefaultInstance() : ode_;
          } else {
            return odeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         */
        public Builder setOde(gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE value) {
          if (odeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ode_ = value;
          } else {
            odeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         */
        public Builder setOde(
            gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.Builder builderForValue) {
          if (odeBuilder_ == null) {
            ode_ = builderForValue.build();
          } else {
            odeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         */
        public Builder mergeOde(gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE value) {
          if (odeBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
              ode_ != null &&
              ode_ != gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.getDefaultInstance()) {
              getOdeBuilder().mergeFrom(value);
            } else {
              ode_ = value;
            }
          } else {
            odeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         */
        public Builder clearOde() {
          bitField0_ = (bitField0_ & ~0x00000010);
          ode_ = null;
          if (odeBuilder_ != null) {
            odeBuilder_.dispose();
            odeBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         */
        public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.Builder getOdeBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getOdeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         */
        public gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODEOrBuilder getOdeOrBuilder() {
          if (odeBuilder_ != null) {
            return odeBuilder_.getMessageOrBuilder();
          } else {
            return ode_ == null ?
                gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.getDefaultInstance() : ode_;
          }
        }
        /**
         * <pre>
         *&#47; &#92;brief Torsional friction information exclusive to ODE physics engine.
         * </pre>
         *
         * <code>optional .gazebo.msgs.Friction.Torsional.ODE ode = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.Builder, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODEOrBuilder> 
            getOdeFieldBuilder() {
          if (odeBuilder_ == null) {
            odeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODE.Builder, gazebo.msgs.FrictionOuterClass.Friction.Torsional.ODEOrBuilder>(
                    getOde(),
                    getParentForChildren(),
                    isClean());
            ode_ = null;
          }
          return odeBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:gazebo.msgs.Friction.Torsional)
      }

      // @@protoc_insertion_point(class_scope:gazebo.msgs.Friction.Torsional)
      private static final gazebo.msgs.FrictionOuterClass.Friction.Torsional DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new gazebo.msgs.FrictionOuterClass.Friction.Torsional();
      }

      public static gazebo.msgs.FrictionOuterClass.Friction.Torsional getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Torsional>
          PARSER = new com.google.protobuf.AbstractParser<Torsional>() {
        @java.lang.Override
        public Torsional parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Torsional> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Torsional> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public gazebo.msgs.FrictionOuterClass.Friction.Torsional getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int MU_FIELD_NUMBER = 1;
    private double mu_ = 0D;
    /**
     * <pre>
     *&#47; &#92;brief Coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu = 1;</code>
     * @return Whether the mu field is set.
     */
    @java.lang.Override
    public boolean hasMu() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu = 1;</code>
     * @return The mu.
     */
    @java.lang.Override
    public double getMu() {
      return mu_;
    }

    public static final int MU2_FIELD_NUMBER = 2;
    private double mu2_ = 0D;
    /**
     * <pre>
     *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu2 = 2;</code>
     * @return Whether the mu2 field is set.
     */
    @java.lang.Override
    public boolean hasMu2() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
     * </pre>
     *
     * <code>optional double mu2 = 2;</code>
     * @return The mu2.
     */
    @java.lang.Override
    public double getMu2() {
      return mu2_;
    }

    public static final int FDIR1_FIELD_NUMBER = 3;
    private gazebo.msgs.Vector3D.Vector3d fdir1_;
    /**
     * <pre>
     *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
     * @return Whether the fdir1 field is set.
     */
    @java.lang.Override
    public boolean hasFdir1() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
     * @return The fdir1.
     */
    @java.lang.Override
    public gazebo.msgs.Vector3D.Vector3d getFdir1() {
      return fdir1_ == null ? gazebo.msgs.Vector3D.Vector3d.getDefaultInstance() : fdir1_;
    }
    /**
     * <pre>
     *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
     */
    @java.lang.Override
    public gazebo.msgs.Vector3D.Vector3dOrBuilder getFdir1OrBuilder() {
      return fdir1_ == null ? gazebo.msgs.Vector3D.Vector3d.getDefaultInstance() : fdir1_;
    }

    public static final int SLIP1_FIELD_NUMBER = 4;
    private double slip1_ = 0D;
    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip1 = 4;</code>
     * @return Whether the slip1 field is set.
     */
    @java.lang.Override
    public boolean hasSlip1() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip1 = 4;</code>
     * @return The slip1.
     */
    @java.lang.Override
    public double getSlip1() {
      return slip1_;
    }

    public static final int SLIP2_FIELD_NUMBER = 5;
    private double slip2_ = 0D;
    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip2 = 5;</code>
     * @return Whether the slip2 field is set.
     */
    @java.lang.Override
    public boolean hasSlip2() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
     * / the range of [0..1].
     * </pre>
     *
     * <code>optional double slip2 = 5;</code>
     * @return The slip2.
     */
    @java.lang.Override
    public double getSlip2() {
      return slip2_;
    }

    public static final int TORSIONAL_FIELD_NUMBER = 6;
    private gazebo.msgs.FrictionOuterClass.Friction.Torsional torsional_;
    /**
     * <pre>
     *&#47; &#92;brief Torsional friction.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
     * @return Whether the torsional field is set.
     */
    @java.lang.Override
    public boolean hasTorsional() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *&#47; &#92;brief Torsional friction.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
     * @return The torsional.
     */
    @java.lang.Override
    public gazebo.msgs.FrictionOuterClass.Friction.Torsional getTorsional() {
      return torsional_ == null ? gazebo.msgs.FrictionOuterClass.Friction.Torsional.getDefaultInstance() : torsional_;
    }
    /**
     * <pre>
     *&#47; &#92;brief Torsional friction.
     * </pre>
     *
     * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
     */
    @java.lang.Override
    public gazebo.msgs.FrictionOuterClass.Friction.TorsionalOrBuilder getTorsionalOrBuilder() {
      return torsional_ == null ? gazebo.msgs.FrictionOuterClass.Friction.Torsional.getDefaultInstance() : torsional_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasFdir1()) {
        if (!getFdir1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, mu_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, mu2_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getFdir1());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, slip1_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, slip2_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(6, getTorsional());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, mu_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, mu2_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFdir1());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, slip1_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, slip2_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTorsional());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gazebo.msgs.FrictionOuterClass.Friction)) {
        return super.equals(obj);
      }
      gazebo.msgs.FrictionOuterClass.Friction other = (gazebo.msgs.FrictionOuterClass.Friction) obj;

      if (hasMu() != other.hasMu()) return false;
      if (hasMu()) {
        if (java.lang.Double.doubleToLongBits(getMu())
            != java.lang.Double.doubleToLongBits(
                other.getMu())) return false;
      }
      if (hasMu2() != other.hasMu2()) return false;
      if (hasMu2()) {
        if (java.lang.Double.doubleToLongBits(getMu2())
            != java.lang.Double.doubleToLongBits(
                other.getMu2())) return false;
      }
      if (hasFdir1() != other.hasFdir1()) return false;
      if (hasFdir1()) {
        if (!getFdir1()
            .equals(other.getFdir1())) return false;
      }
      if (hasSlip1() != other.hasSlip1()) return false;
      if (hasSlip1()) {
        if (java.lang.Double.doubleToLongBits(getSlip1())
            != java.lang.Double.doubleToLongBits(
                other.getSlip1())) return false;
      }
      if (hasSlip2() != other.hasSlip2()) return false;
      if (hasSlip2()) {
        if (java.lang.Double.doubleToLongBits(getSlip2())
            != java.lang.Double.doubleToLongBits(
                other.getSlip2())) return false;
      }
      if (hasTorsional() != other.hasTorsional()) return false;
      if (hasTorsional()) {
        if (!getTorsional()
            .equals(other.getTorsional())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMu()) {
        hash = (37 * hash) + MU_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMu()));
      }
      if (hasMu2()) {
        hash = (37 * hash) + MU2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMu2()));
      }
      if (hasFdir1()) {
        hash = (37 * hash) + FDIR1_FIELD_NUMBER;
        hash = (53 * hash) + getFdir1().hashCode();
      }
      if (hasSlip1()) {
        hash = (37 * hash) + SLIP1_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSlip1()));
      }
      if (hasSlip2()) {
        hash = (37 * hash) + SLIP2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSlip2()));
      }
      if (hasTorsional()) {
        hash = (37 * hash) + TORSIONAL_FIELD_NUMBER;
        hash = (53 * hash) + getTorsional().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gazebo.msgs.FrictionOuterClass.Friction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gazebo.msgs.FrictionOuterClass.Friction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Friction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.Friction)
        gazebo.msgs.FrictionOuterClass.FrictionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.FrictionOuterClass.Friction.class, gazebo.msgs.FrictionOuterClass.Friction.Builder.class);
      }

      // Construct using gazebo.msgs.FrictionOuterClass.Friction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFdir1FieldBuilder();
          getTorsionalFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        mu_ = 0D;
        mu2_ = 0D;
        fdir1_ = null;
        if (fdir1Builder_ != null) {
          fdir1Builder_.dispose();
          fdir1Builder_ = null;
        }
        slip1_ = 0D;
        slip2_ = 0D;
        torsional_ = null;
        if (torsionalBuilder_ != null) {
          torsionalBuilder_.dispose();
          torsionalBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gazebo.msgs.FrictionOuterClass.internal_static_gazebo_msgs_Friction_descriptor;
      }

      @java.lang.Override
      public gazebo.msgs.FrictionOuterClass.Friction getDefaultInstanceForType() {
        return gazebo.msgs.FrictionOuterClass.Friction.getDefaultInstance();
      }

      @java.lang.Override
      public gazebo.msgs.FrictionOuterClass.Friction build() {
        gazebo.msgs.FrictionOuterClass.Friction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public gazebo.msgs.FrictionOuterClass.Friction buildPartial() {
        gazebo.msgs.FrictionOuterClass.Friction result = new gazebo.msgs.FrictionOuterClass.Friction(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(gazebo.msgs.FrictionOuterClass.Friction result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.mu_ = mu_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.mu2_ = mu2_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fdir1_ = fdir1Builder_ == null
              ? fdir1_
              : fdir1Builder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.slip1_ = slip1_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.slip2_ = slip2_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.torsional_ = torsionalBuilder_ == null
              ? torsional_
              : torsionalBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gazebo.msgs.FrictionOuterClass.Friction) {
          return mergeFrom((gazebo.msgs.FrictionOuterClass.Friction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gazebo.msgs.FrictionOuterClass.Friction other) {
        if (other == gazebo.msgs.FrictionOuterClass.Friction.getDefaultInstance()) return this;
        if (other.hasMu()) {
          setMu(other.getMu());
        }
        if (other.hasMu2()) {
          setMu2(other.getMu2());
        }
        if (other.hasFdir1()) {
          mergeFdir1(other.getFdir1());
        }
        if (other.hasSlip1()) {
          setSlip1(other.getSlip1());
        }
        if (other.hasSlip2()) {
          setSlip2(other.getSlip2());
        }
        if (other.hasTorsional()) {
          mergeTorsional(other.getTorsional());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasFdir1()) {
          if (!getFdir1().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                mu_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                mu2_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 26: {
                input.readMessage(
                    getFdir1FieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 33: {
                slip1_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                slip2_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 50: {
                input.readMessage(
                    getTorsionalFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double mu_ ;
      /**
       * <pre>
       *&#47; &#92;brief Coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu = 1;</code>
       * @return Whether the mu field is set.
       */
      @java.lang.Override
      public boolean hasMu() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu = 1;</code>
       * @return The mu.
       */
      @java.lang.Override
      public double getMu() {
        return mu_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu = 1;</code>
       * @param value The mu to set.
       * @return This builder for chaining.
       */
      public Builder setMu(double value) {
        
        mu_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMu() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mu_ = 0D;
        onChanged();
        return this;
      }

      private double mu2_ ;
      /**
       * <pre>
       *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu2 = 2;</code>
       * @return Whether the mu2 field is set.
       */
      @java.lang.Override
      public boolean hasMu2() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu2 = 2;</code>
       * @return The mu2.
       */
      @java.lang.Override
      public double getMu2() {
        return mu2_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu2 = 2;</code>
       * @param value The mu2 to set.
       * @return This builder for chaining.
       */
      public Builder setMu2(double value) {
        
        mu2_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Second coefficient of friction in the range of [0..1].
       * </pre>
       *
       * <code>optional double mu2 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMu2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mu2_ = 0D;
        onChanged();
        return this;
      }

      private gazebo.msgs.Vector3D.Vector3d fdir1_;
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.Vector3D.Vector3d, gazebo.msgs.Vector3D.Vector3d.Builder, gazebo.msgs.Vector3D.Vector3dOrBuilder> fdir1Builder_;
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       * @return Whether the fdir1 field is set.
       */
      public boolean hasFdir1() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       * @return The fdir1.
       */
      public gazebo.msgs.Vector3D.Vector3d getFdir1() {
        if (fdir1Builder_ == null) {
          return fdir1_ == null ? gazebo.msgs.Vector3D.Vector3d.getDefaultInstance() : fdir1_;
        } else {
          return fdir1Builder_.getMessage();
        }
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       */
      public Builder setFdir1(gazebo.msgs.Vector3D.Vector3d value) {
        if (fdir1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fdir1_ = value;
        } else {
          fdir1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       */
      public Builder setFdir1(
          gazebo.msgs.Vector3D.Vector3d.Builder builderForValue) {
        if (fdir1Builder_ == null) {
          fdir1_ = builderForValue.build();
        } else {
          fdir1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       */
      public Builder mergeFdir1(gazebo.msgs.Vector3D.Vector3d value) {
        if (fdir1Builder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            fdir1_ != null &&
            fdir1_ != gazebo.msgs.Vector3D.Vector3d.getDefaultInstance()) {
            getFdir1Builder().mergeFrom(value);
          } else {
            fdir1_ = value;
          }
        } else {
          fdir1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       */
      public Builder clearFdir1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fdir1_ = null;
        if (fdir1Builder_ != null) {
          fdir1Builder_.dispose();
          fdir1Builder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       */
      public gazebo.msgs.Vector3D.Vector3d.Builder getFdir1Builder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFdir1FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       */
      public gazebo.msgs.Vector3D.Vector3dOrBuilder getFdir1OrBuilder() {
        if (fdir1Builder_ != null) {
          return fdir1Builder_.getMessageOrBuilder();
        } else {
          return fdir1_ == null ?
              gazebo.msgs.Vector3D.Vector3d.getDefaultInstance() : fdir1_;
        }
      }
      /**
       * <pre>
       *&#47; &#92;brief Direction of mu1 in the collision local reference frame.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Vector3d fdir1 = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.Vector3D.Vector3d, gazebo.msgs.Vector3D.Vector3d.Builder, gazebo.msgs.Vector3D.Vector3dOrBuilder> 
          getFdir1FieldBuilder() {
        if (fdir1Builder_ == null) {
          fdir1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gazebo.msgs.Vector3D.Vector3d, gazebo.msgs.Vector3D.Vector3d.Builder, gazebo.msgs.Vector3D.Vector3dOrBuilder>(
                  getFdir1(),
                  getParentForChildren(),
                  isClean());
          fdir1_ = null;
        }
        return fdir1Builder_;
      }

      private double slip1_ ;
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip1 = 4;</code>
       * @return Whether the slip1 field is set.
       */
      @java.lang.Override
      public boolean hasSlip1() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip1 = 4;</code>
       * @return The slip1.
       */
      @java.lang.Override
      public double getSlip1() {
        return slip1_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip1 = 4;</code>
       * @param value The slip1 to set.
       * @return This builder for chaining.
       */
      public Builder setSlip1(double value) {
        
        slip1_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 1 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip1 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlip1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        slip1_ = 0D;
        onChanged();
        return this;
      }

      private double slip2_ ;
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip2 = 5;</code>
       * @return Whether the slip2 field is set.
       */
      @java.lang.Override
      public boolean hasSlip2() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip2 = 5;</code>
       * @return The slip2.
       */
      @java.lang.Override
      public double getSlip2() {
        return slip2_;
      }
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip2 = 5;</code>
       * @param value The slip2 to set.
       * @return This builder for chaining.
       */
      public Builder setSlip2(double value) {
        
        slip2_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Force dependent slip direction 2 in collision local frame, between
       * / the range of [0..1].
       * </pre>
       *
       * <code>optional double slip2 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlip2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        slip2_ = 0D;
        onChanged();
        return this;
      }

      private gazebo.msgs.FrictionOuterClass.Friction.Torsional torsional_;
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.FrictionOuterClass.Friction.Torsional, gazebo.msgs.FrictionOuterClass.Friction.Torsional.Builder, gazebo.msgs.FrictionOuterClass.Friction.TorsionalOrBuilder> torsionalBuilder_;
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       * @return Whether the torsional field is set.
       */
      public boolean hasTorsional() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       * @return The torsional.
       */
      public gazebo.msgs.FrictionOuterClass.Friction.Torsional getTorsional() {
        if (torsionalBuilder_ == null) {
          return torsional_ == null ? gazebo.msgs.FrictionOuterClass.Friction.Torsional.getDefaultInstance() : torsional_;
        } else {
          return torsionalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       */
      public Builder setTorsional(gazebo.msgs.FrictionOuterClass.Friction.Torsional value) {
        if (torsionalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          torsional_ = value;
        } else {
          torsionalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       */
      public Builder setTorsional(
          gazebo.msgs.FrictionOuterClass.Friction.Torsional.Builder builderForValue) {
        if (torsionalBuilder_ == null) {
          torsional_ = builderForValue.build();
        } else {
          torsionalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       */
      public Builder mergeTorsional(gazebo.msgs.FrictionOuterClass.Friction.Torsional value) {
        if (torsionalBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            torsional_ != null &&
            torsional_ != gazebo.msgs.FrictionOuterClass.Friction.Torsional.getDefaultInstance()) {
            getTorsionalBuilder().mergeFrom(value);
          } else {
            torsional_ = value;
          }
        } else {
          torsionalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       */
      public Builder clearTorsional() {
        bitField0_ = (bitField0_ & ~0x00000020);
        torsional_ = null;
        if (torsionalBuilder_ != null) {
          torsionalBuilder_.dispose();
          torsionalBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       */
      public gazebo.msgs.FrictionOuterClass.Friction.Torsional.Builder getTorsionalBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTorsionalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       */
      public gazebo.msgs.FrictionOuterClass.Friction.TorsionalOrBuilder getTorsionalOrBuilder() {
        if (torsionalBuilder_ != null) {
          return torsionalBuilder_.getMessageOrBuilder();
        } else {
          return torsional_ == null ?
              gazebo.msgs.FrictionOuterClass.Friction.Torsional.getDefaultInstance() : torsional_;
        }
      }
      /**
       * <pre>
       *&#47; &#92;brief Torsional friction.
       * </pre>
       *
       * <code>optional .gazebo.msgs.Friction.Torsional torsional = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.FrictionOuterClass.Friction.Torsional, gazebo.msgs.FrictionOuterClass.Friction.Torsional.Builder, gazebo.msgs.FrictionOuterClass.Friction.TorsionalOrBuilder> 
          getTorsionalFieldBuilder() {
        if (torsionalBuilder_ == null) {
          torsionalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gazebo.msgs.FrictionOuterClass.Friction.Torsional, gazebo.msgs.FrictionOuterClass.Friction.Torsional.Builder, gazebo.msgs.FrictionOuterClass.Friction.TorsionalOrBuilder>(
                  getTorsional(),
                  getParentForChildren(),
                  isClean());
          torsional_ = null;
        }
        return torsionalBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Friction)
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Friction)
    private static final gazebo.msgs.FrictionOuterClass.Friction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gazebo.msgs.FrictionOuterClass.Friction();
    }

    public static gazebo.msgs.FrictionOuterClass.Friction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Friction>
        PARSER = new com.google.protobuf.AbstractParser<Friction>() {
      @java.lang.Override
      public Friction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Friction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Friction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public gazebo.msgs.FrictionOuterClass.Friction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Friction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_Friction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Friction_Torsional_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_Friction_Torsional_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Friction_Torsional_ODE_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_Friction_Torsional_ODE_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016friction.proto\022\013gazebo.msgs\032\016vector3d." +
      "proto\"\315\002\n\010Friction\022\n\n\002mu\030\001 \001(\001\022\013\n\003mu2\030\002 " +
      "\001(\001\022$\n\005fdir1\030\003 \001(\0132\025.gazebo.msgs.Vector3" +
      "d\022\r\n\005slip1\030\004 \001(\001\022\r\n\005slip2\030\005 \001(\001\0222\n\ttorsi" +
      "onal\030\006 \001(\0132\037.gazebo.msgs.Friction.Torsio" +
      "nal\032\257\001\n\tTorsional\022\023\n\013coefficient\030\001 \001(\001\022\030" +
      "\n\020use_patch_radius\030\002 \001(\010\022\024\n\014patch_radius" +
      "\030\003 \001(\001\022\026\n\016surface_radius\030\004 \001(\001\0220\n\003ode\030\005 " +
      "\001(\0132#.gazebo.msgs.Friction.Torsional.ODE" +
      "\032\023\n\003ODE\022\014\n\004slip\030\001 \001(\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gazebo.msgs.Vector3D.getDescriptor(),
        });
    internal_static_gazebo_msgs_Friction_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_Friction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_Friction_descriptor,
        new java.lang.String[] { "Mu", "Mu2", "Fdir1", "Slip1", "Slip2", "Torsional", });
    internal_static_gazebo_msgs_Friction_Torsional_descriptor =
      internal_static_gazebo_msgs_Friction_descriptor.getNestedTypes().get(0);
    internal_static_gazebo_msgs_Friction_Torsional_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_Friction_Torsional_descriptor,
        new java.lang.String[] { "Coefficient", "UsePatchRadius", "PatchRadius", "SurfaceRadius", "Ode", });
    internal_static_gazebo_msgs_Friction_Torsional_ODE_descriptor =
      internal_static_gazebo_msgs_Friction_Torsional_descriptor.getNestedTypes().get(0);
    internal_static_gazebo_msgs_Friction_Torsional_ODE_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_Friction_Torsional_ODE_descriptor,
        new java.lang.String[] { "Slip", });
    gazebo.msgs.Vector3D.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
