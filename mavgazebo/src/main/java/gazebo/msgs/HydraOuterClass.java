// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hydra.proto

package gazebo.msgs;

public final class HydraOuterClass {
  private HydraOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HydraOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.Hydra)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Info for the right paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     * @return Whether the right field is set.
     */
    boolean hasRight();
    /**
     * <pre>
     * Info for the right paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     * @return The right.
     */
    gazebo.msgs.HydraOuterClass.Hydra.Paddle getRight();
    /**
     * <pre>
     * Info for the right paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     */
    gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder getRightOrBuilder();

    /**
     * <pre>
     * Info for the left paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     * @return Whether the left field is set.
     */
    boolean hasLeft();
    /**
     * <pre>
     * Info for the left paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     * @return The left.
     */
    gazebo.msgs.HydraOuterClass.Hydra.Paddle getLeft();
    /**
     * <pre>
     * Info for the left paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     */
    gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder getLeftOrBuilder();
  }
  /**
   * Protobuf type {@code gazebo.msgs.Hydra}
   */
  public static final class Hydra extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.Hydra)
      HydraOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Hydra.newBuilder() to construct.
    private Hydra(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Hydra() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Hydra();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gazebo.msgs.HydraOuterClass.Hydra.class, gazebo.msgs.HydraOuterClass.Hydra.Builder.class);
    }

    public interface PaddleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:gazebo.msgs.Hydra.Paddle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Pose of the paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       * @return Whether the pose field is set.
       */
      boolean hasPose();
      /**
       * <pre>
       * Pose of the paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       * @return The pose.
       */
      gazebo.msgs.PoseOuterClass.Pose getPose();
      /**
       * <pre>
       * Pose of the paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       */
      gazebo.msgs.PoseOuterClass.PoseOrBuilder getPoseOrBuilder();

      /**
       * <pre>
       * The button labeled LB
       * </pre>
       *
       * <code>required bool button_bumper = 2;</code>
       * @return Whether the buttonBumper field is set.
       */
      boolean hasButtonBumper();
      /**
       * <pre>
       * The button labeled LB
       * </pre>
       *
       * <code>required bool button_bumper = 2;</code>
       * @return The buttonBumper.
       */
      boolean getButtonBumper();

      /**
       * <pre>
       * Button 1
       * </pre>
       *
       * <code>required bool button_1 = 3;</code>
       * @return Whether the button1 field is set.
       */
      boolean hasButton1();
      /**
       * <pre>
       * Button 1
       * </pre>
       *
       * <code>required bool button_1 = 3;</code>
       * @return The button1.
       */
      boolean getButton1();

      /**
       * <pre>
       * Button 2
       * </pre>
       *
       * <code>required bool button_2 = 4;</code>
       * @return Whether the button2 field is set.
       */
      boolean hasButton2();
      /**
       * <pre>
       * Button 2
       * </pre>
       *
       * <code>required bool button_2 = 4;</code>
       * @return The button2.
       */
      boolean getButton2();

      /**
       * <pre>
       * Button 3
       * </pre>
       *
       * <code>required bool button_3 = 5;</code>
       * @return Whether the button3 field is set.
       */
      boolean hasButton3();
      /**
       * <pre>
       * Button 3
       * </pre>
       *
       * <code>required bool button_3 = 5;</code>
       * @return The button3.
       */
      boolean getButton3();

      /**
       * <pre>
       * Button 4
       * </pre>
       *
       * <code>required bool button_4 = 6;</code>
       * @return Whether the button4 field is set.
       */
      boolean hasButton4();
      /**
       * <pre>
       * Button 4
       * </pre>
       *
       * <code>required bool button_4 = 6;</code>
       * @return The button4.
       */
      boolean getButton4();

      /**
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       *
       * <code>required bool button_joy = 7;</code>
       * @return Whether the buttonJoy field is set.
       */
      boolean hasButtonJoy();
      /**
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       *
       * <code>required bool button_joy = 7;</code>
       * @return The buttonJoy.
       */
      boolean getButtonJoy();

      /**
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       *
       * <code>required bool button_center = 8;</code>
       * @return Whether the buttonCenter field is set.
       */
      boolean hasButtonCenter();
      /**
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       *
       * <code>required bool button_center = 8;</code>
       * @return The buttonCenter.
       */
      boolean getButtonCenter();

      /**
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       *
       * <code>required double joy_x = 9;</code>
       * @return Whether the joyX field is set.
       */
      boolean hasJoyX();
      /**
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       *
       * <code>required double joy_x = 9;</code>
       * @return The joyX.
       */
      double getJoyX();

      /**
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       *
       * <code>required double joy_y = 10;</code>
       * @return Whether the joyY field is set.
       */
      boolean hasJoyY();
      /**
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       *
       * <code>required double joy_y = 10;</code>
       * @return The joyY.
       */
      double getJoyY();

      /**
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       *
       * <code>required double trigger = 11;</code>
       * @return Whether the trigger field is set.
       */
      boolean hasTrigger();
      /**
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       *
       * <code>required double trigger = 11;</code>
       * @return The trigger.
       */
      double getTrigger();
    }
    /**
     * Protobuf type {@code gazebo.msgs.Hydra.Paddle}
     */
    public static final class Paddle extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:gazebo.msgs.Hydra.Paddle)
        PaddleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Paddle.newBuilder() to construct.
      private Paddle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Paddle() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Paddle();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.HydraOuterClass.Hydra.Paddle.class, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder.class);
      }

      private int bitField0_;
      public static final int POSE_FIELD_NUMBER = 1;
      private gazebo.msgs.PoseOuterClass.Pose pose_;
      /**
       * <pre>
       * Pose of the paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       * @return Whether the pose field is set.
       */
      @java.lang.Override
      public boolean hasPose() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Pose of the paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       * @return The pose.
       */
      @java.lang.Override
      public gazebo.msgs.PoseOuterClass.Pose getPose() {
        return pose_ == null ? gazebo.msgs.PoseOuterClass.Pose.getDefaultInstance() : pose_;
      }
      /**
       * <pre>
       * Pose of the paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       */
      @java.lang.Override
      public gazebo.msgs.PoseOuterClass.PoseOrBuilder getPoseOrBuilder() {
        return pose_ == null ? gazebo.msgs.PoseOuterClass.Pose.getDefaultInstance() : pose_;
      }

      public static final int BUTTON_BUMPER_FIELD_NUMBER = 2;
      private boolean buttonBumper_ = false;
      /**
       * <pre>
       * The button labeled LB
       * </pre>
       *
       * <code>required bool button_bumper = 2;</code>
       * @return Whether the buttonBumper field is set.
       */
      @java.lang.Override
      public boolean hasButtonBumper() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The button labeled LB
       * </pre>
       *
       * <code>required bool button_bumper = 2;</code>
       * @return The buttonBumper.
       */
      @java.lang.Override
      public boolean getButtonBumper() {
        return buttonBumper_;
      }

      public static final int BUTTON_1_FIELD_NUMBER = 3;
      private boolean button1_ = false;
      /**
       * <pre>
       * Button 1
       * </pre>
       *
       * <code>required bool button_1 = 3;</code>
       * @return Whether the button1 field is set.
       */
      @java.lang.Override
      public boolean hasButton1() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Button 1
       * </pre>
       *
       * <code>required bool button_1 = 3;</code>
       * @return The button1.
       */
      @java.lang.Override
      public boolean getButton1() {
        return button1_;
      }

      public static final int BUTTON_2_FIELD_NUMBER = 4;
      private boolean button2_ = false;
      /**
       * <pre>
       * Button 2
       * </pre>
       *
       * <code>required bool button_2 = 4;</code>
       * @return Whether the button2 field is set.
       */
      @java.lang.Override
      public boolean hasButton2() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Button 2
       * </pre>
       *
       * <code>required bool button_2 = 4;</code>
       * @return The button2.
       */
      @java.lang.Override
      public boolean getButton2() {
        return button2_;
      }

      public static final int BUTTON_3_FIELD_NUMBER = 5;
      private boolean button3_ = false;
      /**
       * <pre>
       * Button 3
       * </pre>
       *
       * <code>required bool button_3 = 5;</code>
       * @return Whether the button3 field is set.
       */
      @java.lang.Override
      public boolean hasButton3() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Button 3
       * </pre>
       *
       * <code>required bool button_3 = 5;</code>
       * @return The button3.
       */
      @java.lang.Override
      public boolean getButton3() {
        return button3_;
      }

      public static final int BUTTON_4_FIELD_NUMBER = 6;
      private boolean button4_ = false;
      /**
       * <pre>
       * Button 4
       * </pre>
       *
       * <code>required bool button_4 = 6;</code>
       * @return Whether the button4 field is set.
       */
      @java.lang.Override
      public boolean hasButton4() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Button 4
       * </pre>
       *
       * <code>required bool button_4 = 6;</code>
       * @return The button4.
       */
      @java.lang.Override
      public boolean getButton4() {
        return button4_;
      }

      public static final int BUTTON_JOY_FIELD_NUMBER = 7;
      private boolean buttonJoy_ = false;
      /**
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       *
       * <code>required bool button_joy = 7;</code>
       * @return Whether the buttonJoy field is set.
       */
      @java.lang.Override
      public boolean hasButtonJoy() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       *
       * <code>required bool button_joy = 7;</code>
       * @return The buttonJoy.
       */
      @java.lang.Override
      public boolean getButtonJoy() {
        return buttonJoy_;
      }

      public static final int BUTTON_CENTER_FIELD_NUMBER = 8;
      private boolean buttonCenter_ = false;
      /**
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       *
       * <code>required bool button_center = 8;</code>
       * @return Whether the buttonCenter field is set.
       */
      @java.lang.Override
      public boolean hasButtonCenter() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       *
       * <code>required bool button_center = 8;</code>
       * @return The buttonCenter.
       */
      @java.lang.Override
      public boolean getButtonCenter() {
        return buttonCenter_;
      }

      public static final int JOY_X_FIELD_NUMBER = 9;
      private double joyX_ = 0D;
      /**
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       *
       * <code>required double joy_x = 9;</code>
       * @return Whether the joyX field is set.
       */
      @java.lang.Override
      public boolean hasJoyX() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       *
       * <code>required double joy_x = 9;</code>
       * @return The joyX.
       */
      @java.lang.Override
      public double getJoyX() {
        return joyX_;
      }

      public static final int JOY_Y_FIELD_NUMBER = 10;
      private double joyY_ = 0D;
      /**
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       *
       * <code>required double joy_y = 10;</code>
       * @return Whether the joyY field is set.
       */
      @java.lang.Override
      public boolean hasJoyY() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       *
       * <code>required double joy_y = 10;</code>
       * @return The joyY.
       */
      @java.lang.Override
      public double getJoyY() {
        return joyY_;
      }

      public static final int TRIGGER_FIELD_NUMBER = 11;
      private double trigger_ = 0D;
      /**
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       *
       * <code>required double trigger = 11;</code>
       * @return Whether the trigger field is set.
       */
      @java.lang.Override
      public boolean hasTrigger() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       *
       * <code>required double trigger = 11;</code>
       * @return The trigger.
       */
      @java.lang.Override
      public double getTrigger() {
        return trigger_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasPose()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButtonBumper()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton1()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton2()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton3()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton4()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButtonJoy()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButtonCenter()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasJoyX()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasJoyY()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTrigger()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPose().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getPose());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(2, buttonBumper_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(3, button1_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeBool(4, button2_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeBool(5, button3_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeBool(6, button4_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeBool(7, buttonJoy_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeBool(8, buttonCenter_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeDouble(9, joyX_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeDouble(10, joyY_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeDouble(11, trigger_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getPose());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, buttonBumper_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, button1_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, button2_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, button3_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, button4_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, buttonJoy_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, buttonCenter_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, joyX_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(10, joyY_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(11, trigger_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof gazebo.msgs.HydraOuterClass.Hydra.Paddle)) {
          return super.equals(obj);
        }
        gazebo.msgs.HydraOuterClass.Hydra.Paddle other = (gazebo.msgs.HydraOuterClass.Hydra.Paddle) obj;

        if (hasPose() != other.hasPose()) return false;
        if (hasPose()) {
          if (!getPose()
              .equals(other.getPose())) return false;
        }
        if (hasButtonBumper() != other.hasButtonBumper()) return false;
        if (hasButtonBumper()) {
          if (getButtonBumper()
              != other.getButtonBumper()) return false;
        }
        if (hasButton1() != other.hasButton1()) return false;
        if (hasButton1()) {
          if (getButton1()
              != other.getButton1()) return false;
        }
        if (hasButton2() != other.hasButton2()) return false;
        if (hasButton2()) {
          if (getButton2()
              != other.getButton2()) return false;
        }
        if (hasButton3() != other.hasButton3()) return false;
        if (hasButton3()) {
          if (getButton3()
              != other.getButton3()) return false;
        }
        if (hasButton4() != other.hasButton4()) return false;
        if (hasButton4()) {
          if (getButton4()
              != other.getButton4()) return false;
        }
        if (hasButtonJoy() != other.hasButtonJoy()) return false;
        if (hasButtonJoy()) {
          if (getButtonJoy()
              != other.getButtonJoy()) return false;
        }
        if (hasButtonCenter() != other.hasButtonCenter()) return false;
        if (hasButtonCenter()) {
          if (getButtonCenter()
              != other.getButtonCenter()) return false;
        }
        if (hasJoyX() != other.hasJoyX()) return false;
        if (hasJoyX()) {
          if (java.lang.Double.doubleToLongBits(getJoyX())
              != java.lang.Double.doubleToLongBits(
                  other.getJoyX())) return false;
        }
        if (hasJoyY() != other.hasJoyY()) return false;
        if (hasJoyY()) {
          if (java.lang.Double.doubleToLongBits(getJoyY())
              != java.lang.Double.doubleToLongBits(
                  other.getJoyY())) return false;
        }
        if (hasTrigger() != other.hasTrigger()) return false;
        if (hasTrigger()) {
          if (java.lang.Double.doubleToLongBits(getTrigger())
              != java.lang.Double.doubleToLongBits(
                  other.getTrigger())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPose()) {
          hash = (37 * hash) + POSE_FIELD_NUMBER;
          hash = (53 * hash) + getPose().hashCode();
        }
        if (hasButtonBumper()) {
          hash = (37 * hash) + BUTTON_BUMPER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getButtonBumper());
        }
        if (hasButton1()) {
          hash = (37 * hash) + BUTTON_1_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getButton1());
        }
        if (hasButton2()) {
          hash = (37 * hash) + BUTTON_2_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getButton2());
        }
        if (hasButton3()) {
          hash = (37 * hash) + BUTTON_3_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getButton3());
        }
        if (hasButton4()) {
          hash = (37 * hash) + BUTTON_4_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getButton4());
        }
        if (hasButtonJoy()) {
          hash = (37 * hash) + BUTTON_JOY_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getButtonJoy());
        }
        if (hasButtonCenter()) {
          hash = (37 * hash) + BUTTON_CENTER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getButtonCenter());
        }
        if (hasJoyX()) {
          hash = (37 * hash) + JOY_X_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getJoyX()));
        }
        if (hasJoyY()) {
          hash = (37 * hash) + JOY_Y_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getJoyY()));
        }
        if (hasTrigger()) {
          hash = (37 * hash) + TRIGGER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getTrigger()));
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(gazebo.msgs.HydraOuterClass.Hydra.Paddle prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code gazebo.msgs.Hydra.Paddle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:gazebo.msgs.Hydra.Paddle)
          gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gazebo.msgs.HydraOuterClass.Hydra.Paddle.class, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder.class);
        }

        // Construct using gazebo.msgs.HydraOuterClass.Hydra.Paddle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPoseFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          pose_ = null;
          if (poseBuilder_ != null) {
            poseBuilder_.dispose();
            poseBuilder_ = null;
          }
          buttonBumper_ = false;
          button1_ = false;
          button2_ = false;
          button3_ = false;
          button4_ = false;
          buttonJoy_ = false;
          buttonCenter_ = false;
          joyX_ = 0D;
          joyY_ = 0D;
          trigger_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
        }

        @java.lang.Override
        public gazebo.msgs.HydraOuterClass.Hydra.Paddle getDefaultInstanceForType() {
          return gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance();
        }

        @java.lang.Override
        public gazebo.msgs.HydraOuterClass.Hydra.Paddle build() {
          gazebo.msgs.HydraOuterClass.Hydra.Paddle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public gazebo.msgs.HydraOuterClass.Hydra.Paddle buildPartial() {
          gazebo.msgs.HydraOuterClass.Hydra.Paddle result = new gazebo.msgs.HydraOuterClass.Hydra.Paddle(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(gazebo.msgs.HydraOuterClass.Hydra.Paddle result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.pose_ = poseBuilder_ == null
                ? pose_
                : poseBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.buttonBumper_ = buttonBumper_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.button1_ = button1_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.button2_ = button2_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.button3_ = button3_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.button4_ = button4_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.buttonJoy_ = buttonJoy_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.buttonCenter_ = buttonCenter_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.joyX_ = joyX_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.joyY_ = joyY_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.trigger_ = trigger_;
            to_bitField0_ |= 0x00000400;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gazebo.msgs.HydraOuterClass.Hydra.Paddle) {
            return mergeFrom((gazebo.msgs.HydraOuterClass.Hydra.Paddle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gazebo.msgs.HydraOuterClass.Hydra.Paddle other) {
          if (other == gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance()) return this;
          if (other.hasPose()) {
            mergePose(other.getPose());
          }
          if (other.hasButtonBumper()) {
            setButtonBumper(other.getButtonBumper());
          }
          if (other.hasButton1()) {
            setButton1(other.getButton1());
          }
          if (other.hasButton2()) {
            setButton2(other.getButton2());
          }
          if (other.hasButton3()) {
            setButton3(other.getButton3());
          }
          if (other.hasButton4()) {
            setButton4(other.getButton4());
          }
          if (other.hasButtonJoy()) {
            setButtonJoy(other.getButtonJoy());
          }
          if (other.hasButtonCenter()) {
            setButtonCenter(other.getButtonCenter());
          }
          if (other.hasJoyX()) {
            setJoyX(other.getJoyX());
          }
          if (other.hasJoyY()) {
            setJoyY(other.getJoyY());
          }
          if (other.hasTrigger()) {
            setTrigger(other.getTrigger());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasPose()) {
            return false;
          }
          if (!hasButtonBumper()) {
            return false;
          }
          if (!hasButton1()) {
            return false;
          }
          if (!hasButton2()) {
            return false;
          }
          if (!hasButton3()) {
            return false;
          }
          if (!hasButton4()) {
            return false;
          }
          if (!hasButtonJoy()) {
            return false;
          }
          if (!hasButtonCenter()) {
            return false;
          }
          if (!hasJoyX()) {
            return false;
          }
          if (!hasJoyY()) {
            return false;
          }
          if (!hasTrigger()) {
            return false;
          }
          if (!getPose().isInitialized()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getPoseFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  buttonBumper_ = input.readBool();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  button1_ = input.readBool();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  button2_ = input.readBool();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  button3_ = input.readBool();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  button4_ = input.readBool();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  buttonJoy_ = input.readBool();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                case 64: {
                  buttonCenter_ = input.readBool();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                case 73: {
                  joyX_ = input.readDouble();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 73
                case 81: {
                  joyY_ = input.readDouble();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 81
                case 89: {
                  trigger_ = input.readDouble();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 89
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private gazebo.msgs.PoseOuterClass.Pose pose_;
        private com.google.protobuf.SingleFieldBuilderV3<
            gazebo.msgs.PoseOuterClass.Pose, gazebo.msgs.PoseOuterClass.Pose.Builder, gazebo.msgs.PoseOuterClass.PoseOrBuilder> poseBuilder_;
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         * @return Whether the pose field is set.
         */
        public boolean hasPose() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         * @return The pose.
         */
        public gazebo.msgs.PoseOuterClass.Pose getPose() {
          if (poseBuilder_ == null) {
            return pose_ == null ? gazebo.msgs.PoseOuterClass.Pose.getDefaultInstance() : pose_;
          } else {
            return poseBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         */
        public Builder setPose(gazebo.msgs.PoseOuterClass.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            pose_ = value;
          } else {
            poseBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         */
        public Builder setPose(
            gazebo.msgs.PoseOuterClass.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            pose_ = builderForValue.build();
          } else {
            poseBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         */
        public Builder mergePose(gazebo.msgs.PoseOuterClass.Pose value) {
          if (poseBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              pose_ != null &&
              pose_ != gazebo.msgs.PoseOuterClass.Pose.getDefaultInstance()) {
              getPoseBuilder().mergeFrom(value);
            } else {
              pose_ = value;
            }
          } else {
            poseBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         */
        public Builder clearPose() {
          bitField0_ = (bitField0_ & ~0x00000001);
          pose_ = null;
          if (poseBuilder_ != null) {
            poseBuilder_.dispose();
            poseBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         */
        public gazebo.msgs.PoseOuterClass.Pose.Builder getPoseBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getPoseFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         */
        public gazebo.msgs.PoseOuterClass.PoseOrBuilder getPoseOrBuilder() {
          if (poseBuilder_ != null) {
            return poseBuilder_.getMessageOrBuilder();
          } else {
            return pose_ == null ?
                gazebo.msgs.PoseOuterClass.Pose.getDefaultInstance() : pose_;
          }
        }
        /**
         * <pre>
         * Pose of the paddle
         * </pre>
         *
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            gazebo.msgs.PoseOuterClass.Pose, gazebo.msgs.PoseOuterClass.Pose.Builder, gazebo.msgs.PoseOuterClass.PoseOrBuilder> 
            getPoseFieldBuilder() {
          if (poseBuilder_ == null) {
            poseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                gazebo.msgs.PoseOuterClass.Pose, gazebo.msgs.PoseOuterClass.Pose.Builder, gazebo.msgs.PoseOuterClass.PoseOrBuilder>(
                    getPose(),
                    getParentForChildren(),
                    isClean());
            pose_ = null;
          }
          return poseBuilder_;
        }

        private boolean buttonBumper_ ;
        /**
         * <pre>
         * The button labeled LB
         * </pre>
         *
         * <code>required bool button_bumper = 2;</code>
         * @return Whether the buttonBumper field is set.
         */
        @java.lang.Override
        public boolean hasButtonBumper() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * The button labeled LB
         * </pre>
         *
         * <code>required bool button_bumper = 2;</code>
         * @return The buttonBumper.
         */
        @java.lang.Override
        public boolean getButtonBumper() {
          return buttonBumper_;
        }
        /**
         * <pre>
         * The button labeled LB
         * </pre>
         *
         * <code>required bool button_bumper = 2;</code>
         * @param value The buttonBumper to set.
         * @return This builder for chaining.
         */
        public Builder setButtonBumper(boolean value) {
          
          buttonBumper_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The button labeled LB
         * </pre>
         *
         * <code>required bool button_bumper = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearButtonBumper() {
          bitField0_ = (bitField0_ & ~0x00000002);
          buttonBumper_ = false;
          onChanged();
          return this;
        }

        private boolean button1_ ;
        /**
         * <pre>
         * Button 1
         * </pre>
         *
         * <code>required bool button_1 = 3;</code>
         * @return Whether the button1 field is set.
         */
        @java.lang.Override
        public boolean hasButton1() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Button 1
         * </pre>
         *
         * <code>required bool button_1 = 3;</code>
         * @return The button1.
         */
        @java.lang.Override
        public boolean getButton1() {
          return button1_;
        }
        /**
         * <pre>
         * Button 1
         * </pre>
         *
         * <code>required bool button_1 = 3;</code>
         * @param value The button1 to set.
         * @return This builder for chaining.
         */
        public Builder setButton1(boolean value) {
          
          button1_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Button 1
         * </pre>
         *
         * <code>required bool button_1 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearButton1() {
          bitField0_ = (bitField0_ & ~0x00000004);
          button1_ = false;
          onChanged();
          return this;
        }

        private boolean button2_ ;
        /**
         * <pre>
         * Button 2
         * </pre>
         *
         * <code>required bool button_2 = 4;</code>
         * @return Whether the button2 field is set.
         */
        @java.lang.Override
        public boolean hasButton2() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Button 2
         * </pre>
         *
         * <code>required bool button_2 = 4;</code>
         * @return The button2.
         */
        @java.lang.Override
        public boolean getButton2() {
          return button2_;
        }
        /**
         * <pre>
         * Button 2
         * </pre>
         *
         * <code>required bool button_2 = 4;</code>
         * @param value The button2 to set.
         * @return This builder for chaining.
         */
        public Builder setButton2(boolean value) {
          
          button2_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Button 2
         * </pre>
         *
         * <code>required bool button_2 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearButton2() {
          bitField0_ = (bitField0_ & ~0x00000008);
          button2_ = false;
          onChanged();
          return this;
        }

        private boolean button3_ ;
        /**
         * <pre>
         * Button 3
         * </pre>
         *
         * <code>required bool button_3 = 5;</code>
         * @return Whether the button3 field is set.
         */
        @java.lang.Override
        public boolean hasButton3() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Button 3
         * </pre>
         *
         * <code>required bool button_3 = 5;</code>
         * @return The button3.
         */
        @java.lang.Override
        public boolean getButton3() {
          return button3_;
        }
        /**
         * <pre>
         * Button 3
         * </pre>
         *
         * <code>required bool button_3 = 5;</code>
         * @param value The button3 to set.
         * @return This builder for chaining.
         */
        public Builder setButton3(boolean value) {
          
          button3_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Button 3
         * </pre>
         *
         * <code>required bool button_3 = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearButton3() {
          bitField0_ = (bitField0_ & ~0x00000010);
          button3_ = false;
          onChanged();
          return this;
        }

        private boolean button4_ ;
        /**
         * <pre>
         * Button 4
         * </pre>
         *
         * <code>required bool button_4 = 6;</code>
         * @return Whether the button4 field is set.
         */
        @java.lang.Override
        public boolean hasButton4() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Button 4
         * </pre>
         *
         * <code>required bool button_4 = 6;</code>
         * @return The button4.
         */
        @java.lang.Override
        public boolean getButton4() {
          return button4_;
        }
        /**
         * <pre>
         * Button 4
         * </pre>
         *
         * <code>required bool button_4 = 6;</code>
         * @param value The button4 to set.
         * @return This builder for chaining.
         */
        public Builder setButton4(boolean value) {
          
          button4_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Button 4
         * </pre>
         *
         * <code>required bool button_4 = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearButton4() {
          bitField0_ = (bitField0_ & ~0x00000020);
          button4_ = false;
          onChanged();
          return this;
        }

        private boolean buttonJoy_ ;
        /**
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         *
         * <code>required bool button_joy = 7;</code>
         * @return Whether the buttonJoy field is set.
         */
        @java.lang.Override
        public boolean hasButtonJoy() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         *
         * <code>required bool button_joy = 7;</code>
         * @return The buttonJoy.
         */
        @java.lang.Override
        public boolean getButtonJoy() {
          return buttonJoy_;
        }
        /**
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         *
         * <code>required bool button_joy = 7;</code>
         * @param value The buttonJoy to set.
         * @return This builder for chaining.
         */
        public Builder setButtonJoy(boolean value) {
          
          buttonJoy_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         *
         * <code>required bool button_joy = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearButtonJoy() {
          bitField0_ = (bitField0_ & ~0x00000040);
          buttonJoy_ = false;
          onChanged();
          return this;
        }

        private boolean buttonCenter_ ;
        /**
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         *
         * <code>required bool button_center = 8;</code>
         * @return Whether the buttonCenter field is set.
         */
        @java.lang.Override
        public boolean hasButtonCenter() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         *
         * <code>required bool button_center = 8;</code>
         * @return The buttonCenter.
         */
        @java.lang.Override
        public boolean getButtonCenter() {
          return buttonCenter_;
        }
        /**
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         *
         * <code>required bool button_center = 8;</code>
         * @param value The buttonCenter to set.
         * @return This builder for chaining.
         */
        public Builder setButtonCenter(boolean value) {
          
          buttonCenter_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         *
         * <code>required bool button_center = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearButtonCenter() {
          bitField0_ = (bitField0_ & ~0x00000080);
          buttonCenter_ = false;
          onChanged();
          return this;
        }

        private double joyX_ ;
        /**
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         *
         * <code>required double joy_x = 9;</code>
         * @return Whether the joyX field is set.
         */
        @java.lang.Override
        public boolean hasJoyX() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         *
         * <code>required double joy_x = 9;</code>
         * @return The joyX.
         */
        @java.lang.Override
        public double getJoyX() {
          return joyX_;
        }
        /**
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         *
         * <code>required double joy_x = 9;</code>
         * @param value The joyX to set.
         * @return This builder for chaining.
         */
        public Builder setJoyX(double value) {
          
          joyX_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         *
         * <code>required double joy_x = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearJoyX() {
          bitField0_ = (bitField0_ & ~0x00000100);
          joyX_ = 0D;
          onChanged();
          return this;
        }

        private double joyY_ ;
        /**
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         *
         * <code>required double joy_y = 10;</code>
         * @return Whether the joyY field is set.
         */
        @java.lang.Override
        public boolean hasJoyY() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         *
         * <code>required double joy_y = 10;</code>
         * @return The joyY.
         */
        @java.lang.Override
        public double getJoyY() {
          return joyY_;
        }
        /**
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         *
         * <code>required double joy_y = 10;</code>
         * @param value The joyY to set.
         * @return This builder for chaining.
         */
        public Builder setJoyY(double value) {
          
          joyY_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         *
         * <code>required double joy_y = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearJoyY() {
          bitField0_ = (bitField0_ & ~0x00000200);
          joyY_ = 0D;
          onChanged();
          return this;
        }

        private double trigger_ ;
        /**
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         *
         * <code>required double trigger = 11;</code>
         * @return Whether the trigger field is set.
         */
        @java.lang.Override
        public boolean hasTrigger() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         *
         * <code>required double trigger = 11;</code>
         * @return The trigger.
         */
        @java.lang.Override
        public double getTrigger() {
          return trigger_;
        }
        /**
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         *
         * <code>required double trigger = 11;</code>
         * @param value The trigger to set.
         * @return This builder for chaining.
         */
        public Builder setTrigger(double value) {
          
          trigger_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         *
         * <code>required double trigger = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearTrigger() {
          bitField0_ = (bitField0_ & ~0x00000400);
          trigger_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:gazebo.msgs.Hydra.Paddle)
      }

      // @@protoc_insertion_point(class_scope:gazebo.msgs.Hydra.Paddle)
      private static final gazebo.msgs.HydraOuterClass.Hydra.Paddle DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new gazebo.msgs.HydraOuterClass.Hydra.Paddle();
      }

      public static gazebo.msgs.HydraOuterClass.Hydra.Paddle getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Paddle>
          PARSER = new com.google.protobuf.AbstractParser<Paddle>() {
        @java.lang.Override
        public Paddle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Paddle> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Paddle> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public gazebo.msgs.HydraOuterClass.Hydra.Paddle getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RIGHT_FIELD_NUMBER = 1;
    private gazebo.msgs.HydraOuterClass.Hydra.Paddle right_;
    /**
     * <pre>
     * Info for the right paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     * @return Whether the right field is set.
     */
    @java.lang.Override
    public boolean hasRight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Info for the right paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     * @return The right.
     */
    @java.lang.Override
    public gazebo.msgs.HydraOuterClass.Hydra.Paddle getRight() {
      return right_ == null ? gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : right_;
    }
    /**
     * <pre>
     * Info for the right paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     */
    @java.lang.Override
    public gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder getRightOrBuilder() {
      return right_ == null ? gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : right_;
    }

    public static final int LEFT_FIELD_NUMBER = 2;
    private gazebo.msgs.HydraOuterClass.Hydra.Paddle left_;
    /**
     * <pre>
     * Info for the left paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     * @return Whether the left field is set.
     */
    @java.lang.Override
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Info for the left paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     * @return The left.
     */
    @java.lang.Override
    public gazebo.msgs.HydraOuterClass.Hydra.Paddle getLeft() {
      return left_ == null ? gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : left_;
    }
    /**
     * <pre>
     * Info for the left paddle
     * </pre>
     *
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     */
    @java.lang.Override
    public gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder getLeftOrBuilder() {
      return left_ == null ? gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : left_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRight().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getLeft().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getRight());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getLeft());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRight());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLeft());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gazebo.msgs.HydraOuterClass.Hydra)) {
        return super.equals(obj);
      }
      gazebo.msgs.HydraOuterClass.Hydra other = (gazebo.msgs.HydraOuterClass.Hydra) obj;

      if (hasRight() != other.hasRight()) return false;
      if (hasRight()) {
        if (!getRight()
            .equals(other.getRight())) return false;
      }
      if (hasLeft() != other.hasLeft()) return false;
      if (hasLeft()) {
        if (!getLeft()
            .equals(other.getLeft())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRight()) {
        hash = (37 * hash) + RIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getRight().hashCode();
      }
      if (hasLeft()) {
        hash = (37 * hash) + LEFT_FIELD_NUMBER;
        hash = (53 * hash) + getLeft().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gazebo.msgs.HydraOuterClass.Hydra parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gazebo.msgs.HydraOuterClass.Hydra prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Hydra}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.Hydra)
        gazebo.msgs.HydraOuterClass.HydraOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.HydraOuterClass.Hydra.class, gazebo.msgs.HydraOuterClass.Hydra.Builder.class);
      }

      // Construct using gazebo.msgs.HydraOuterClass.Hydra.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRightFieldBuilder();
          getLeftFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        right_ = null;
        if (rightBuilder_ != null) {
          rightBuilder_.dispose();
          rightBuilder_ = null;
        }
        left_ = null;
        if (leftBuilder_ != null) {
          leftBuilder_.dispose();
          leftBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gazebo.msgs.HydraOuterClass.internal_static_gazebo_msgs_Hydra_descriptor;
      }

      @java.lang.Override
      public gazebo.msgs.HydraOuterClass.Hydra getDefaultInstanceForType() {
        return gazebo.msgs.HydraOuterClass.Hydra.getDefaultInstance();
      }

      @java.lang.Override
      public gazebo.msgs.HydraOuterClass.Hydra build() {
        gazebo.msgs.HydraOuterClass.Hydra result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public gazebo.msgs.HydraOuterClass.Hydra buildPartial() {
        gazebo.msgs.HydraOuterClass.Hydra result = new gazebo.msgs.HydraOuterClass.Hydra(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(gazebo.msgs.HydraOuterClass.Hydra result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.right_ = rightBuilder_ == null
              ? right_
              : rightBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.left_ = leftBuilder_ == null
              ? left_
              : leftBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gazebo.msgs.HydraOuterClass.Hydra) {
          return mergeFrom((gazebo.msgs.HydraOuterClass.Hydra)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gazebo.msgs.HydraOuterClass.Hydra other) {
        if (other == gazebo.msgs.HydraOuterClass.Hydra.getDefaultInstance()) return this;
        if (other.hasRight()) {
          mergeRight(other.getRight());
        }
        if (other.hasLeft()) {
          mergeLeft(other.getLeft());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasRight()) {
          return false;
        }
        if (!hasLeft()) {
          return false;
        }
        if (!getRight().isInitialized()) {
          return false;
        }
        if (!getLeft().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getRightFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getLeftFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private gazebo.msgs.HydraOuterClass.Hydra.Paddle right_;
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.HydraOuterClass.Hydra.Paddle, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder, gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder> rightBuilder_;
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       * @return Whether the right field is set.
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       * @return The right.
       */
      public gazebo.msgs.HydraOuterClass.Hydra.Paddle getRight() {
        if (rightBuilder_ == null) {
          return right_ == null ? gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : right_;
        } else {
          return rightBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       */
      public Builder setRight(gazebo.msgs.HydraOuterClass.Hydra.Paddle value) {
        if (rightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          right_ = value;
        } else {
          rightBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       */
      public Builder setRight(
          gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder builderForValue) {
        if (rightBuilder_ == null) {
          right_ = builderForValue.build();
        } else {
          rightBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       */
      public Builder mergeRight(gazebo.msgs.HydraOuterClass.Hydra.Paddle value) {
        if (rightBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            right_ != null &&
            right_ != gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance()) {
            getRightBuilder().mergeFrom(value);
          } else {
            right_ = value;
          }
        } else {
          rightBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        right_ = null;
        if (rightBuilder_ != null) {
          rightBuilder_.dispose();
          rightBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       */
      public gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder getRightBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRightFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       */
      public gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder getRightOrBuilder() {
        if (rightBuilder_ != null) {
          return rightBuilder_.getMessageOrBuilder();
        } else {
          return right_ == null ?
              gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : right_;
        }
      }
      /**
       * <pre>
       * Info for the right paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.HydraOuterClass.Hydra.Paddle, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder, gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder> 
          getRightFieldBuilder() {
        if (rightBuilder_ == null) {
          rightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gazebo.msgs.HydraOuterClass.Hydra.Paddle, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder, gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder>(
                  getRight(),
                  getParentForChildren(),
                  isClean());
          right_ = null;
        }
        return rightBuilder_;
      }

      private gazebo.msgs.HydraOuterClass.Hydra.Paddle left_;
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.HydraOuterClass.Hydra.Paddle, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder, gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder> leftBuilder_;
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       * @return Whether the left field is set.
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       * @return The left.
       */
      public gazebo.msgs.HydraOuterClass.Hydra.Paddle getLeft() {
        if (leftBuilder_ == null) {
          return left_ == null ? gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : left_;
        } else {
          return leftBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       */
      public Builder setLeft(gazebo.msgs.HydraOuterClass.Hydra.Paddle value) {
        if (leftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          left_ = value;
        } else {
          leftBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       */
      public Builder setLeft(
          gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder builderForValue) {
        if (leftBuilder_ == null) {
          left_ = builderForValue.build();
        } else {
          leftBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       */
      public Builder mergeLeft(gazebo.msgs.HydraOuterClass.Hydra.Paddle value) {
        if (leftBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            left_ != null &&
            left_ != gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance()) {
            getLeftBuilder().mergeFrom(value);
          } else {
            left_ = value;
          }
        } else {
          leftBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000002);
        left_ = null;
        if (leftBuilder_ != null) {
          leftBuilder_.dispose();
          leftBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       */
      public gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder getLeftBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLeftFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       */
      public gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder getLeftOrBuilder() {
        if (leftBuilder_ != null) {
          return leftBuilder_.getMessageOrBuilder();
        } else {
          return left_ == null ?
              gazebo.msgs.HydraOuterClass.Hydra.Paddle.getDefaultInstance() : left_;
        }
      }
      /**
       * <pre>
       * Info for the left paddle
       * </pre>
       *
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gazebo.msgs.HydraOuterClass.Hydra.Paddle, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder, gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder> 
          getLeftFieldBuilder() {
        if (leftBuilder_ == null) {
          leftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gazebo.msgs.HydraOuterClass.Hydra.Paddle, gazebo.msgs.HydraOuterClass.Hydra.Paddle.Builder, gazebo.msgs.HydraOuterClass.Hydra.PaddleOrBuilder>(
                  getLeft(),
                  getParentForChildren(),
                  isClean());
          left_ = null;
        }
        return leftBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Hydra)
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Hydra)
    private static final gazebo.msgs.HydraOuterClass.Hydra DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gazebo.msgs.HydraOuterClass.Hydra();
    }

    public static gazebo.msgs.HydraOuterClass.Hydra getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Hydra>
        PARSER = new com.google.protobuf.AbstractParser<Hydra>() {
      @java.lang.Override
      public Hydra parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Hydra> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Hydra> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public gazebo.msgs.HydraOuterClass.Hydra getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Hydra_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_Hydra_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013hydra.proto\022\013gazebo.msgs\032\npose.proto\"\277" +
      "\002\n\005Hydra\022(\n\005right\030\001 \002(\0132\031.gazebo.msgs.Hy" +
      "dra.Paddle\022\'\n\004left\030\002 \002(\0132\031.gazebo.msgs.H" +
      "ydra.Paddle\032\342\001\n\006Paddle\022\037\n\004pose\030\001 \002(\0132\021.g" +
      "azebo.msgs.Pose\022\025\n\rbutton_bumper\030\002 \002(\010\022\020" +
      "\n\010button_1\030\003 \002(\010\022\020\n\010button_2\030\004 \002(\010\022\020\n\010bu" +
      "tton_3\030\005 \002(\010\022\020\n\010button_4\030\006 \002(\010\022\022\n\nbutton" +
      "_joy\030\007 \002(\010\022\025\n\rbutton_center\030\010 \002(\010\022\r\n\005joy" +
      "_x\030\t \002(\001\022\r\n\005joy_y\030\n \002(\001\022\017\n\007trigger\030\013 \002(\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gazebo.msgs.PoseOuterClass.getDescriptor(),
        });
    internal_static_gazebo_msgs_Hydra_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_Hydra_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_Hydra_descriptor,
        new java.lang.String[] { "Right", "Left", });
    internal_static_gazebo_msgs_Hydra_Paddle_descriptor =
      internal_static_gazebo_msgs_Hydra_descriptor.getNestedTypes().get(0);
    internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_Hydra_Paddle_descriptor,
        new java.lang.String[] { "Pose", "ButtonBumper", "Button1", "Button2", "Button3", "Button4", "ButtonJoy", "ButtonCenter", "JoyX", "JoyY", "Trigger", });
    gazebo.msgs.PoseOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
