// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: performance_metrics.proto

package gazebo.msgs;

public final class PerformanceMetricsOuterClass {
  private PerformanceMetricsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PerformanceMetricsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.PerformanceMetrics)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; max_step_size x real_time_update_rate sets an upper bound of
     * / real_time_factor. If real_time_factor &lt; 1 the simulation is
     * / slower than real time.
     * </pre>
     *
     * <code>required double real_time_factor = 1 [default = 0];</code>
     * @return Whether the realTimeFactor field is set.
     */
    boolean hasRealTimeFactor();
    /**
     * <pre>
     *&#47; max_step_size x real_time_update_rate sets an upper bound of
     * / real_time_factor. If real_time_factor &lt; 1 the simulation is
     * / slower than real time.
     * </pre>
     *
     * <code>required double real_time_factor = 1 [default = 0];</code>
     * @return The realTimeFactor.
     */
    double getRealTimeFactor();

    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    java.util.List<gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics> 
        getSensorList();
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics getSensor(int index);
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    int getSensorCount();
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    java.util.List<? extends gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder> 
        getSensorOrBuilderList();
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder getSensorOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gazebo.msgs.PerformanceMetrics}
   */
  public static final class PerformanceMetrics extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.PerformanceMetrics)
      PerformanceMetricsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PerformanceMetrics.newBuilder() to construct.
    private PerformanceMetrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PerformanceMetrics() {
      sensor_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PerformanceMetrics();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.class, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.Builder.class);
    }

    public interface PerformanceSensorMetricsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *&#47; &#92;brief Sensor name
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       *&#47; &#92;brief Sensor name
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       *&#47; &#92;brief Sensor name
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in real time.
       * </pre>
       *
       * <code>required double real_update_rate = 2;</code>
       * @return Whether the realUpdateRate field is set.
       */
      boolean hasRealUpdateRate();
      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in real time.
       * </pre>
       *
       * <code>required double real_update_rate = 2;</code>
       * @return The realUpdateRate.
       */
      double getRealUpdateRate();

      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in simulation time.
       * </pre>
       *
       * <code>required double sim_update_rate = 3;</code>
       * @return Whether the simUpdateRate field is set.
       */
      boolean hasSimUpdateRate();
      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in simulation time.
       * </pre>
       *
       * <code>required double sim_update_rate = 3;</code>
       * @return The simUpdateRate.
       */
      double getSimUpdateRate();

      /**
       * <pre>
       *&#47; &#92;brief If the sensor is a camera then this field should be filled
       * / with average fps in real time.
       * </pre>
       *
       * <code>optional double fps = 4;</code>
       * @return Whether the fps field is set.
       */
      boolean hasFps();
      /**
       * <pre>
       *&#47; &#92;brief If the sensor is a camera then this field should be filled
       * / with average fps in real time.
       * </pre>
       *
       * <code>optional double fps = 4;</code>
       * @return The fps.
       */
      double getFps();
    }
    /**
     * <pre>
     *&#47; &#92;brief This message contains information about the performance of
     * / each sensor in the world.
     * / If the sensor is a camera then it will publish the frame per second (fps).
     * </pre>
     *
     * Protobuf type {@code gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics}
     */
    public static final class PerformanceSensorMetrics extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics)
        PerformanceSensorMetricsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PerformanceSensorMetrics.newBuilder() to construct.
      private PerformanceSensorMetrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PerformanceSensorMetrics() {
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PerformanceSensorMetrics();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.class, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       *&#47; &#92;brief Sensor name
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief Sensor name
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       *&#47; &#92;brief Sensor name
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REAL_UPDATE_RATE_FIELD_NUMBER = 2;
      private double realUpdateRate_ = 0D;
      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in real time.
       * </pre>
       *
       * <code>required double real_update_rate = 2;</code>
       * @return Whether the realUpdateRate field is set.
       */
      @java.lang.Override
      public boolean hasRealUpdateRate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in real time.
       * </pre>
       *
       * <code>required double real_update_rate = 2;</code>
       * @return The realUpdateRate.
       */
      @java.lang.Override
      public double getRealUpdateRate() {
        return realUpdateRate_;
      }

      public static final int SIM_UPDATE_RATE_FIELD_NUMBER = 3;
      private double simUpdateRate_ = 0D;
      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in simulation time.
       * </pre>
       *
       * <code>required double sim_update_rate = 3;</code>
       * @return Whether the simUpdateRate field is set.
       */
      @java.lang.Override
      public boolean hasSimUpdateRate() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief The update rate of the sensor in simulation time.
       * </pre>
       *
       * <code>required double sim_update_rate = 3;</code>
       * @return The simUpdateRate.
       */
      @java.lang.Override
      public double getSimUpdateRate() {
        return simUpdateRate_;
      }

      public static final int FPS_FIELD_NUMBER = 4;
      private double fps_ = 0D;
      /**
       * <pre>
       *&#47; &#92;brief If the sensor is a camera then this field should be filled
       * / with average fps in real time.
       * </pre>
       *
       * <code>optional double fps = 4;</code>
       * @return Whether the fps field is set.
       */
      @java.lang.Override
      public boolean hasFps() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *&#47; &#92;brief If the sensor is a camera then this field should be filled
       * / with average fps in real time.
       * </pre>
       *
       * <code>optional double fps = 4;</code>
       * @return The fps.
       */
      @java.lang.Override
      public double getFps() {
        return fps_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRealUpdateRate()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSimUpdateRate()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeDouble(2, realUpdateRate_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeDouble(3, simUpdateRate_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeDouble(4, fps_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, realUpdateRate_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, simUpdateRate_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, fps_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics)) {
          return super.equals(obj);
        }
        gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics other = (gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasRealUpdateRate() != other.hasRealUpdateRate()) return false;
        if (hasRealUpdateRate()) {
          if (java.lang.Double.doubleToLongBits(getRealUpdateRate())
              != java.lang.Double.doubleToLongBits(
                  other.getRealUpdateRate())) return false;
        }
        if (hasSimUpdateRate() != other.hasSimUpdateRate()) return false;
        if (hasSimUpdateRate()) {
          if (java.lang.Double.doubleToLongBits(getSimUpdateRate())
              != java.lang.Double.doubleToLongBits(
                  other.getSimUpdateRate())) return false;
        }
        if (hasFps() != other.hasFps()) return false;
        if (hasFps()) {
          if (java.lang.Double.doubleToLongBits(getFps())
              != java.lang.Double.doubleToLongBits(
                  other.getFps())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasRealUpdateRate()) {
          hash = (37 * hash) + REAL_UPDATE_RATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getRealUpdateRate()));
        }
        if (hasSimUpdateRate()) {
          hash = (37 * hash) + SIM_UPDATE_RATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSimUpdateRate()));
        }
        if (hasFps()) {
          hash = (37 * hash) + FPS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getFps()));
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *&#47; &#92;brief This message contains information about the performance of
       * / each sensor in the world.
       * / If the sensor is a camera then it will publish the frame per second (fps).
       * </pre>
       *
       * Protobuf type {@code gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics)
          gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.class, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder.class);
        }

        // Construct using gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          realUpdateRate_ = 0D;
          simUpdateRate_ = 0D;
          fps_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_descriptor;
        }

        @java.lang.Override
        public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics getDefaultInstanceForType() {
          return gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.getDefaultInstance();
        }

        @java.lang.Override
        public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics build() {
          gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics buildPartial() {
          gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics result = new gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.realUpdateRate_ = realUpdateRate_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.simUpdateRate_ = simUpdateRate_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.fps_ = fps_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics) {
            return mergeFrom((gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics other) {
          if (other == gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.getDefaultInstance()) return this;
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasRealUpdateRate()) {
            setRealUpdateRate(other.getRealUpdateRate());
          }
          if (other.hasSimUpdateRate()) {
            setSimUpdateRate(other.getSimUpdateRate());
          }
          if (other.hasFps()) {
            setFps(other.getFps());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasName()) {
            return false;
          }
          if (!hasRealUpdateRate()) {
            return false;
          }
          if (!hasSimUpdateRate()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 17: {
                  realUpdateRate_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 25: {
                  simUpdateRate_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                case 33: {
                  fps_ = input.readDouble();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 33
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         *&#47; &#92;brief Sensor name
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief Sensor name
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         *&#47; &#92;brief Sensor name
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *&#47; &#92;brief Sensor name
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Sensor name
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief Sensor name
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private double realUpdateRate_ ;
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in real time.
         * </pre>
         *
         * <code>required double real_update_rate = 2;</code>
         * @return Whether the realUpdateRate field is set.
         */
        @java.lang.Override
        public boolean hasRealUpdateRate() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in real time.
         * </pre>
         *
         * <code>required double real_update_rate = 2;</code>
         * @return The realUpdateRate.
         */
        @java.lang.Override
        public double getRealUpdateRate() {
          return realUpdateRate_;
        }
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in real time.
         * </pre>
         *
         * <code>required double real_update_rate = 2;</code>
         * @param value The realUpdateRate to set.
         * @return This builder for chaining.
         */
        public Builder setRealUpdateRate(double value) {
          
          realUpdateRate_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in real time.
         * </pre>
         *
         * <code>required double real_update_rate = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearRealUpdateRate() {
          bitField0_ = (bitField0_ & ~0x00000002);
          realUpdateRate_ = 0D;
          onChanged();
          return this;
        }

        private double simUpdateRate_ ;
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in simulation time.
         * </pre>
         *
         * <code>required double sim_update_rate = 3;</code>
         * @return Whether the simUpdateRate field is set.
         */
        @java.lang.Override
        public boolean hasSimUpdateRate() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in simulation time.
         * </pre>
         *
         * <code>required double sim_update_rate = 3;</code>
         * @return The simUpdateRate.
         */
        @java.lang.Override
        public double getSimUpdateRate() {
          return simUpdateRate_;
        }
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in simulation time.
         * </pre>
         *
         * <code>required double sim_update_rate = 3;</code>
         * @param value The simUpdateRate to set.
         * @return This builder for chaining.
         */
        public Builder setSimUpdateRate(double value) {
          
          simUpdateRate_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief The update rate of the sensor in simulation time.
         * </pre>
         *
         * <code>required double sim_update_rate = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSimUpdateRate() {
          bitField0_ = (bitField0_ & ~0x00000004);
          simUpdateRate_ = 0D;
          onChanged();
          return this;
        }

        private double fps_ ;
        /**
         * <pre>
         *&#47; &#92;brief If the sensor is a camera then this field should be filled
         * / with average fps in real time.
         * </pre>
         *
         * <code>optional double fps = 4;</code>
         * @return Whether the fps field is set.
         */
        @java.lang.Override
        public boolean hasFps() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *&#47; &#92;brief If the sensor is a camera then this field should be filled
         * / with average fps in real time.
         * </pre>
         *
         * <code>optional double fps = 4;</code>
         * @return The fps.
         */
        @java.lang.Override
        public double getFps() {
          return fps_;
        }
        /**
         * <pre>
         *&#47; &#92;brief If the sensor is a camera then this field should be filled
         * / with average fps in real time.
         * </pre>
         *
         * <code>optional double fps = 4;</code>
         * @param value The fps to set.
         * @return This builder for chaining.
         */
        public Builder setFps(double value) {
          
          fps_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; &#92;brief If the sensor is a camera then this field should be filled
         * / with average fps in real time.
         * </pre>
         *
         * <code>optional double fps = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearFps() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fps_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics)
      }

      // @@protoc_insertion_point(class_scope:gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics)
      private static final gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics();
      }

      public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PerformanceSensorMetrics>
          PARSER = new com.google.protobuf.AbstractParser<PerformanceSensorMetrics>() {
        @java.lang.Override
        public PerformanceSensorMetrics parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PerformanceSensorMetrics> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PerformanceSensorMetrics> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int REAL_TIME_FACTOR_FIELD_NUMBER = 1;
    private double realTimeFactor_ = 0D;
    /**
     * <pre>
     *&#47; max_step_size x real_time_update_rate sets an upper bound of
     * / real_time_factor. If real_time_factor &lt; 1 the simulation is
     * / slower than real time.
     * </pre>
     *
     * <code>required double real_time_factor = 1 [default = 0];</code>
     * @return Whether the realTimeFactor field is set.
     */
    @java.lang.Override
    public boolean hasRealTimeFactor() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *&#47; max_step_size x real_time_update_rate sets an upper bound of
     * / real_time_factor. If real_time_factor &lt; 1 the simulation is
     * / slower than real time.
     * </pre>
     *
     * <code>required double real_time_factor = 1 [default = 0];</code>
     * @return The realTimeFactor.
     */
    @java.lang.Override
    public double getRealTimeFactor() {
      return realTimeFactor_;
    }

    public static final int SENSOR_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics> sensor_;
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    @java.lang.Override
    public java.util.List<gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics> getSensorList() {
      return sensor_;
    }
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder> 
        getSensorOrBuilderList() {
      return sensor_;
    }
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    @java.lang.Override
    public int getSensorCount() {
      return sensor_.size();
    }
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    @java.lang.Override
    public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics getSensor(int index) {
      return sensor_.get(index);
    }
    /**
     * <pre>
     *&#47; Each sensor in the world will create a PerformanceSensorMetrics
     * / message publishing information about the performance.
     * </pre>
     *
     * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
     */
    @java.lang.Override
    public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder getSensorOrBuilder(
        int index) {
      return sensor_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRealTimeFactor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSensorCount(); i++) {
        if (!getSensor(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, realTimeFactor_);
      }
      for (int i = 0; i < sensor_.size(); i++) {
        output.writeMessage(2, sensor_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, realTimeFactor_);
      }
      for (int i = 0; i < sensor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sensor_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics)) {
        return super.equals(obj);
      }
      gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics other = (gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics) obj;

      if (hasRealTimeFactor() != other.hasRealTimeFactor()) return false;
      if (hasRealTimeFactor()) {
        if (java.lang.Double.doubleToLongBits(getRealTimeFactor())
            != java.lang.Double.doubleToLongBits(
                other.getRealTimeFactor())) return false;
      }
      if (!getSensorList()
          .equals(other.getSensorList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRealTimeFactor()) {
        hash = (37 * hash) + REAL_TIME_FACTOR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRealTimeFactor()));
      }
      if (getSensorCount() > 0) {
        hash = (37 * hash) + SENSOR_FIELD_NUMBER;
        hash = (53 * hash) + getSensorList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.PerformanceMetrics}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.PerformanceMetrics)
        gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetricsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.class, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.Builder.class);
      }

      // Construct using gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        realTimeFactor_ = 0D;
        if (sensorBuilder_ == null) {
          sensor_ = java.util.Collections.emptyList();
        } else {
          sensor_ = null;
          sensorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gazebo.msgs.PerformanceMetricsOuterClass.internal_static_gazebo_msgs_PerformanceMetrics_descriptor;
      }

      @java.lang.Override
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics getDefaultInstanceForType() {
        return gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.getDefaultInstance();
      }

      @java.lang.Override
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics build() {
        gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics buildPartial() {
        gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics result = new gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics result) {
        if (sensorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            sensor_ = java.util.Collections.unmodifiableList(sensor_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sensor_ = sensor_;
        } else {
          result.sensor_ = sensorBuilder_.build();
        }
      }

      private void buildPartial0(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.realTimeFactor_ = realTimeFactor_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics) {
          return mergeFrom((gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics other) {
        if (other == gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.getDefaultInstance()) return this;
        if (other.hasRealTimeFactor()) {
          setRealTimeFactor(other.getRealTimeFactor());
        }
        if (sensorBuilder_ == null) {
          if (!other.sensor_.isEmpty()) {
            if (sensor_.isEmpty()) {
              sensor_ = other.sensor_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSensorIsMutable();
              sensor_.addAll(other.sensor_);
            }
            onChanged();
          }
        } else {
          if (!other.sensor_.isEmpty()) {
            if (sensorBuilder_.isEmpty()) {
              sensorBuilder_.dispose();
              sensorBuilder_ = null;
              sensor_ = other.sensor_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sensorBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSensorFieldBuilder() : null;
            } else {
              sensorBuilder_.addAllMessages(other.sensor_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasRealTimeFactor()) {
          return false;
        }
        for (int i = 0; i < getSensorCount(); i++) {
          if (!getSensor(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                realTimeFactor_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 18: {
                gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics m =
                    input.readMessage(
                        gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.PARSER,
                        extensionRegistry);
                if (sensorBuilder_ == null) {
                  ensureSensorIsMutable();
                  sensor_.add(m);
                } else {
                  sensorBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double realTimeFactor_ ;
      /**
       * <pre>
       *&#47; max_step_size x real_time_update_rate sets an upper bound of
       * / real_time_factor. If real_time_factor &lt; 1 the simulation is
       * / slower than real time.
       * </pre>
       *
       * <code>required double real_time_factor = 1 [default = 0];</code>
       * @return Whether the realTimeFactor field is set.
       */
      @java.lang.Override
      public boolean hasRealTimeFactor() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *&#47; max_step_size x real_time_update_rate sets an upper bound of
       * / real_time_factor. If real_time_factor &lt; 1 the simulation is
       * / slower than real time.
       * </pre>
       *
       * <code>required double real_time_factor = 1 [default = 0];</code>
       * @return The realTimeFactor.
       */
      @java.lang.Override
      public double getRealTimeFactor() {
        return realTimeFactor_;
      }
      /**
       * <pre>
       *&#47; max_step_size x real_time_update_rate sets an upper bound of
       * / real_time_factor. If real_time_factor &lt; 1 the simulation is
       * / slower than real time.
       * </pre>
       *
       * <code>required double real_time_factor = 1 [default = 0];</code>
       * @param value The realTimeFactor to set.
       * @return This builder for chaining.
       */
      public Builder setRealTimeFactor(double value) {
        
        realTimeFactor_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; max_step_size x real_time_update_rate sets an upper bound of
       * / real_time_factor. If real_time_factor &lt; 1 the simulation is
       * / slower than real time.
       * </pre>
       *
       * <code>required double real_time_factor = 1 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRealTimeFactor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        realTimeFactor_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics> sensor_ =
        java.util.Collections.emptyList();
      private void ensureSensorIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          sensor_ = new java.util.ArrayList<gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics>(sensor_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder> sensorBuilder_;

      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public java.util.List<gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics> getSensorList() {
        if (sensorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensor_);
        } else {
          return sensorBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public int getSensorCount() {
        if (sensorBuilder_ == null) {
          return sensor_.size();
        } else {
          return sensorBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics getSensor(int index) {
        if (sensorBuilder_ == null) {
          return sensor_.get(index);
        } else {
          return sensorBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder setSensor(
          int index, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorIsMutable();
          sensor_.set(index, value);
          onChanged();
        } else {
          sensorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder setSensor(
          int index, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder addSensor(gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorIsMutable();
          sensor_.add(value);
          onChanged();
        } else {
          sensorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder addSensor(
          int index, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorIsMutable();
          sensor_.add(index, value);
          onChanged();
        } else {
          sensorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder addSensor(
          gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.add(builderForValue.build());
          onChanged();
        } else {
          sensorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder addSensor(
          int index, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder addAllSensor(
          java.lang.Iterable<? extends gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics> values) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sensor_);
          onChanged();
        } else {
          sensorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder clearSensor() {
        if (sensorBuilder_ == null) {
          sensor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sensorBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public Builder removeSensor(int index) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.remove(index);
          onChanged();
        } else {
          sensorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder getSensorBuilder(
          int index) {
        return getSensorFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder getSensorOrBuilder(
          int index) {
        if (sensorBuilder_ == null) {
          return sensor_.get(index);  } else {
          return sensorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public java.util.List<? extends gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder> 
           getSensorOrBuilderList() {
        if (sensorBuilder_ != null) {
          return sensorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensor_);
        }
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder addSensorBuilder() {
        return getSensorFieldBuilder().addBuilder(
            gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.getDefaultInstance());
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder addSensorBuilder(
          int index) {
        return getSensorFieldBuilder().addBuilder(
            index, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.getDefaultInstance());
      }
      /**
       * <pre>
       *&#47; Each sensor in the world will create a PerformanceSensorMetrics
       * / message publishing information about the performance.
       * </pre>
       *
       * <code>repeated .gazebo.msgs.PerformanceMetrics.PerformanceSensorMetrics sensor = 2;</code>
       */
      public java.util.List<gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder> 
           getSensorBuilderList() {
        return getSensorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder> 
          getSensorFieldBuilder() {
        if (sensorBuilder_ == null) {
          sensorBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetrics.Builder, gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics.PerformanceSensorMetricsOrBuilder>(
                  sensor_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          sensor_ = null;
        }
        return sensorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:gazebo.msgs.PerformanceMetrics)
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.PerformanceMetrics)
    private static final gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics();
    }

    public static gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PerformanceMetrics>
        PARSER = new com.google.protobuf.AbstractParser<PerformanceMetrics>() {
      @java.lang.Override
      public PerformanceMetrics parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PerformanceMetrics> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PerformanceMetrics> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public gazebo.msgs.PerformanceMetricsOuterClass.PerformanceMetrics getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_PerformanceMetrics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_PerformanceMetrics_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031performance_metrics.proto\022\013gazebo.msgs" +
      "\"\345\001\n\022PerformanceMetrics\022\033\n\020real_time_fac" +
      "tor\030\001 \002(\001:\0010\022H\n\006sensor\030\002 \003(\01328.gazebo.ms" +
      "gs.PerformanceMetrics.PerformanceSensorM" +
      "etrics\032h\n\030PerformanceSensorMetrics\022\014\n\004na" +
      "me\030\001 \002(\t\022\030\n\020real_update_rate\030\002 \002(\001\022\027\n\017si" +
      "m_update_rate\030\003 \002(\001\022\013\n\003fps\030\004 \001(\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_gazebo_msgs_PerformanceMetrics_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_PerformanceMetrics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_PerformanceMetrics_descriptor,
        new java.lang.String[] { "RealTimeFactor", "Sensor", });
    internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_descriptor =
      internal_static_gazebo_msgs_PerformanceMetrics_descriptor.getNestedTypes().get(0);
    internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gazebo_msgs_PerformanceMetrics_PerformanceSensorMetrics_descriptor,
        new java.lang.String[] { "Name", "RealUpdateRate", "SimUpdateRate", "Fps", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
