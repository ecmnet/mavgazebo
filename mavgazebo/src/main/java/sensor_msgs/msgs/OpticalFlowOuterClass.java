// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpticalFlow.proto

package sensor_msgs.msgs;

public final class OpticalFlowOuterClass {
  private OpticalFlowOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OpticalFlowOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensor_msgs.msgs.OpticalFlow)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 time_usec = 1;</code>
     * @return Whether the timeUsec field is set.
     */
    boolean hasTimeUsec();
    /**
     * <code>required int64 time_usec = 1;</code>
     * @return The timeUsec.
     */
    long getTimeUsec();

    /**
     * <code>required int32 sensor_id = 2;</code>
     * @return Whether the sensorId field is set.
     */
    boolean hasSensorId();
    /**
     * <code>required int32 sensor_id = 2;</code>
     * @return The sensorId.
     */
    int getSensorId();

    /**
     * <code>required int32 integration_time_us = 3;</code>
     * @return Whether the integrationTimeUs field is set.
     */
    boolean hasIntegrationTimeUs();
    /**
     * <code>required int32 integration_time_us = 3;</code>
     * @return The integrationTimeUs.
     */
    int getIntegrationTimeUs();

    /**
     * <code>required float integrated_x = 4;</code>
     * @return Whether the integratedX field is set.
     */
    boolean hasIntegratedX();
    /**
     * <code>required float integrated_x = 4;</code>
     * @return The integratedX.
     */
    float getIntegratedX();

    /**
     * <code>required float integrated_y = 5;</code>
     * @return Whether the integratedY field is set.
     */
    boolean hasIntegratedY();
    /**
     * <code>required float integrated_y = 5;</code>
     * @return The integratedY.
     */
    float getIntegratedY();

    /**
     * <code>required float integrated_xgyro = 6;</code>
     * @return Whether the integratedXgyro field is set.
     */
    boolean hasIntegratedXgyro();
    /**
     * <code>required float integrated_xgyro = 6;</code>
     * @return The integratedXgyro.
     */
    float getIntegratedXgyro();

    /**
     * <code>required float integrated_ygyro = 7;</code>
     * @return Whether the integratedYgyro field is set.
     */
    boolean hasIntegratedYgyro();
    /**
     * <code>required float integrated_ygyro = 7;</code>
     * @return The integratedYgyro.
     */
    float getIntegratedYgyro();

    /**
     * <code>required float integrated_zgyro = 8;</code>
     * @return Whether the integratedZgyro field is set.
     */
    boolean hasIntegratedZgyro();
    /**
     * <code>required float integrated_zgyro = 8;</code>
     * @return The integratedZgyro.
     */
    float getIntegratedZgyro();

    /**
     * <code>required float temperature = 9;</code>
     * @return Whether the temperature field is set.
     */
    boolean hasTemperature();
    /**
     * <code>required float temperature = 9;</code>
     * @return The temperature.
     */
    float getTemperature();

    /**
     * <code>required int32 quality = 10;</code>
     * @return Whether the quality field is set.
     */
    boolean hasQuality();
    /**
     * <code>required int32 quality = 10;</code>
     * @return The quality.
     */
    int getQuality();

    /**
     * <code>required int32 time_delta_distance_us = 11;</code>
     * @return Whether the timeDeltaDistanceUs field is set.
     */
    boolean hasTimeDeltaDistanceUs();
    /**
     * <code>required int32 time_delta_distance_us = 11;</code>
     * @return The timeDeltaDistanceUs.
     */
    int getTimeDeltaDistanceUs();

    /**
     * <code>required float distance = 12;</code>
     * @return Whether the distance field is set.
     */
    boolean hasDistance();
    /**
     * <code>required float distance = 12;</code>
     * @return The distance.
     */
    float getDistance();
  }
  /**
   * Protobuf type {@code sensor_msgs.msgs.OpticalFlow}
   */
  public static final class OpticalFlow extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensor_msgs.msgs.OpticalFlow)
      OpticalFlowOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OpticalFlow.newBuilder() to construct.
    private OpticalFlow(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OpticalFlow() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OpticalFlow();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OpticalFlow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              timeUsec_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sensorId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              integrationTimeUs_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              integratedX_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              integratedY_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              integratedXgyro_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              integratedYgyro_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              integratedZgyro_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              temperature_ = input.readFloat();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              quality_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              timeDeltaDistanceUs_ = input.readInt32();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              distance_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return sensor_msgs.msgs.OpticalFlowOuterClass.internal_static_sensor_msgs_msgs_OpticalFlow_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return sensor_msgs.msgs.OpticalFlowOuterClass.internal_static_sensor_msgs_msgs_OpticalFlow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow.class, sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_USEC_FIELD_NUMBER = 1;
    private long timeUsec_;
    /**
     * <code>required int64 time_usec = 1;</code>
     * @return Whether the timeUsec field is set.
     */
    @java.lang.Override
    public boolean hasTimeUsec() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int64 time_usec = 1;</code>
     * @return The timeUsec.
     */
    @java.lang.Override
    public long getTimeUsec() {
      return timeUsec_;
    }

    public static final int SENSOR_ID_FIELD_NUMBER = 2;
    private int sensorId_;
    /**
     * <code>required int32 sensor_id = 2;</code>
     * @return Whether the sensorId field is set.
     */
    @java.lang.Override
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 sensor_id = 2;</code>
     * @return The sensorId.
     */
    @java.lang.Override
    public int getSensorId() {
      return sensorId_;
    }

    public static final int INTEGRATION_TIME_US_FIELD_NUMBER = 3;
    private int integrationTimeUs_;
    /**
     * <code>required int32 integration_time_us = 3;</code>
     * @return Whether the integrationTimeUs field is set.
     */
    @java.lang.Override
    public boolean hasIntegrationTimeUs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 integration_time_us = 3;</code>
     * @return The integrationTimeUs.
     */
    @java.lang.Override
    public int getIntegrationTimeUs() {
      return integrationTimeUs_;
    }

    public static final int INTEGRATED_X_FIELD_NUMBER = 4;
    private float integratedX_;
    /**
     * <code>required float integrated_x = 4;</code>
     * @return Whether the integratedX field is set.
     */
    @java.lang.Override
    public boolean hasIntegratedX() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required float integrated_x = 4;</code>
     * @return The integratedX.
     */
    @java.lang.Override
    public float getIntegratedX() {
      return integratedX_;
    }

    public static final int INTEGRATED_Y_FIELD_NUMBER = 5;
    private float integratedY_;
    /**
     * <code>required float integrated_y = 5;</code>
     * @return Whether the integratedY field is set.
     */
    @java.lang.Override
    public boolean hasIntegratedY() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>required float integrated_y = 5;</code>
     * @return The integratedY.
     */
    @java.lang.Override
    public float getIntegratedY() {
      return integratedY_;
    }

    public static final int INTEGRATED_XGYRO_FIELD_NUMBER = 6;
    private float integratedXgyro_;
    /**
     * <code>required float integrated_xgyro = 6;</code>
     * @return Whether the integratedXgyro field is set.
     */
    @java.lang.Override
    public boolean hasIntegratedXgyro() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>required float integrated_xgyro = 6;</code>
     * @return The integratedXgyro.
     */
    @java.lang.Override
    public float getIntegratedXgyro() {
      return integratedXgyro_;
    }

    public static final int INTEGRATED_YGYRO_FIELD_NUMBER = 7;
    private float integratedYgyro_;
    /**
     * <code>required float integrated_ygyro = 7;</code>
     * @return Whether the integratedYgyro field is set.
     */
    @java.lang.Override
    public boolean hasIntegratedYgyro() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>required float integrated_ygyro = 7;</code>
     * @return The integratedYgyro.
     */
    @java.lang.Override
    public float getIntegratedYgyro() {
      return integratedYgyro_;
    }

    public static final int INTEGRATED_ZGYRO_FIELD_NUMBER = 8;
    private float integratedZgyro_;
    /**
     * <code>required float integrated_zgyro = 8;</code>
     * @return Whether the integratedZgyro field is set.
     */
    @java.lang.Override
    public boolean hasIntegratedZgyro() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>required float integrated_zgyro = 8;</code>
     * @return The integratedZgyro.
     */
    @java.lang.Override
    public float getIntegratedZgyro() {
      return integratedZgyro_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 9;
    private float temperature_;
    /**
     * <code>required float temperature = 9;</code>
     * @return Whether the temperature field is set.
     */
    @java.lang.Override
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>required float temperature = 9;</code>
     * @return The temperature.
     */
    @java.lang.Override
    public float getTemperature() {
      return temperature_;
    }

    public static final int QUALITY_FIELD_NUMBER = 10;
    private int quality_;
    /**
     * <code>required int32 quality = 10;</code>
     * @return Whether the quality field is set.
     */
    @java.lang.Override
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>required int32 quality = 10;</code>
     * @return The quality.
     */
    @java.lang.Override
    public int getQuality() {
      return quality_;
    }

    public static final int TIME_DELTA_DISTANCE_US_FIELD_NUMBER = 11;
    private int timeDeltaDistanceUs_;
    /**
     * <code>required int32 time_delta_distance_us = 11;</code>
     * @return Whether the timeDeltaDistanceUs field is set.
     */
    @java.lang.Override
    public boolean hasTimeDeltaDistanceUs() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>required int32 time_delta_distance_us = 11;</code>
     * @return The timeDeltaDistanceUs.
     */
    @java.lang.Override
    public int getTimeDeltaDistanceUs() {
      return timeDeltaDistanceUs_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 12;
    private float distance_;
    /**
     * <code>required float distance = 12;</code>
     * @return Whether the distance field is set.
     */
    @java.lang.Override
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>required float distance = 12;</code>
     * @return The distance.
     */
    @java.lang.Override
    public float getDistance() {
      return distance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeUsec()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntegrationTimeUs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntegratedX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntegratedY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntegratedXgyro()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntegratedYgyro()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntegratedZgyro()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuality()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeDeltaDistanceUs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, timeUsec_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, sensorId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, integrationTimeUs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, integratedX_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, integratedY_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, integratedXgyro_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFloat(7, integratedYgyro_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeFloat(8, integratedZgyro_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeFloat(9, temperature_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, quality_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(11, timeDeltaDistanceUs_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeFloat(12, distance_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timeUsec_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sensorId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, integrationTimeUs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, integratedX_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, integratedY_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, integratedXgyro_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, integratedYgyro_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, integratedZgyro_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, temperature_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, quality_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, timeDeltaDistanceUs_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, distance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow)) {
        return super.equals(obj);
      }
      sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow other = (sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow) obj;

      if (hasTimeUsec() != other.hasTimeUsec()) return false;
      if (hasTimeUsec()) {
        if (getTimeUsec()
            != other.getTimeUsec()) return false;
      }
      if (hasSensorId() != other.hasSensorId()) return false;
      if (hasSensorId()) {
        if (getSensorId()
            != other.getSensorId()) return false;
      }
      if (hasIntegrationTimeUs() != other.hasIntegrationTimeUs()) return false;
      if (hasIntegrationTimeUs()) {
        if (getIntegrationTimeUs()
            != other.getIntegrationTimeUs()) return false;
      }
      if (hasIntegratedX() != other.hasIntegratedX()) return false;
      if (hasIntegratedX()) {
        if (java.lang.Float.floatToIntBits(getIntegratedX())
            != java.lang.Float.floatToIntBits(
                other.getIntegratedX())) return false;
      }
      if (hasIntegratedY() != other.hasIntegratedY()) return false;
      if (hasIntegratedY()) {
        if (java.lang.Float.floatToIntBits(getIntegratedY())
            != java.lang.Float.floatToIntBits(
                other.getIntegratedY())) return false;
      }
      if (hasIntegratedXgyro() != other.hasIntegratedXgyro()) return false;
      if (hasIntegratedXgyro()) {
        if (java.lang.Float.floatToIntBits(getIntegratedXgyro())
            != java.lang.Float.floatToIntBits(
                other.getIntegratedXgyro())) return false;
      }
      if (hasIntegratedYgyro() != other.hasIntegratedYgyro()) return false;
      if (hasIntegratedYgyro()) {
        if (java.lang.Float.floatToIntBits(getIntegratedYgyro())
            != java.lang.Float.floatToIntBits(
                other.getIntegratedYgyro())) return false;
      }
      if (hasIntegratedZgyro() != other.hasIntegratedZgyro()) return false;
      if (hasIntegratedZgyro()) {
        if (java.lang.Float.floatToIntBits(getIntegratedZgyro())
            != java.lang.Float.floatToIntBits(
                other.getIntegratedZgyro())) return false;
      }
      if (hasTemperature() != other.hasTemperature()) return false;
      if (hasTemperature()) {
        if (java.lang.Float.floatToIntBits(getTemperature())
            != java.lang.Float.floatToIntBits(
                other.getTemperature())) return false;
      }
      if (hasQuality() != other.hasQuality()) return false;
      if (hasQuality()) {
        if (getQuality()
            != other.getQuality()) return false;
      }
      if (hasTimeDeltaDistanceUs() != other.hasTimeDeltaDistanceUs()) return false;
      if (hasTimeDeltaDistanceUs()) {
        if (getTimeDeltaDistanceUs()
            != other.getTimeDeltaDistanceUs()) return false;
      }
      if (hasDistance() != other.hasDistance()) return false;
      if (hasDistance()) {
        if (java.lang.Float.floatToIntBits(getDistance())
            != java.lang.Float.floatToIntBits(
                other.getDistance())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeUsec()) {
        hash = (37 * hash) + TIME_USEC_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimeUsec());
      }
      if (hasSensorId()) {
        hash = (37 * hash) + SENSOR_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSensorId();
      }
      if (hasIntegrationTimeUs()) {
        hash = (37 * hash) + INTEGRATION_TIME_US_FIELD_NUMBER;
        hash = (53 * hash) + getIntegrationTimeUs();
      }
      if (hasIntegratedX()) {
        hash = (37 * hash) + INTEGRATED_X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getIntegratedX());
      }
      if (hasIntegratedY()) {
        hash = (37 * hash) + INTEGRATED_Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getIntegratedY());
      }
      if (hasIntegratedXgyro()) {
        hash = (37 * hash) + INTEGRATED_XGYRO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getIntegratedXgyro());
      }
      if (hasIntegratedYgyro()) {
        hash = (37 * hash) + INTEGRATED_YGYRO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getIntegratedYgyro());
      }
      if (hasIntegratedZgyro()) {
        hash = (37 * hash) + INTEGRATED_ZGYRO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getIntegratedZgyro());
      }
      if (hasTemperature()) {
        hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTemperature());
      }
      if (hasQuality()) {
        hash = (37 * hash) + QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getQuality();
      }
      if (hasTimeDeltaDistanceUs()) {
        hash = (37 * hash) + TIME_DELTA_DISTANCE_US_FIELD_NUMBER;
        hash = (53 * hash) + getTimeDeltaDistanceUs();
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDistance());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sensor_msgs.msgs.OpticalFlow}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensor_msgs.msgs.OpticalFlow)
        sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return sensor_msgs.msgs.OpticalFlowOuterClass.internal_static_sensor_msgs_msgs_OpticalFlow_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return sensor_msgs.msgs.OpticalFlowOuterClass.internal_static_sensor_msgs_msgs_OpticalFlow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow.class, sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow.Builder.class);
      }

      // Construct using sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timeUsec_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        integrationTimeUs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        integratedX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        integratedY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        integratedXgyro_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        integratedYgyro_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        integratedZgyro_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        temperature_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        timeDeltaDistanceUs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        distance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return sensor_msgs.msgs.OpticalFlowOuterClass.internal_static_sensor_msgs_msgs_OpticalFlow_descriptor;
      }

      @java.lang.Override
      public sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow getDefaultInstanceForType() {
        return sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow.getDefaultInstance();
      }

      @java.lang.Override
      public sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow build() {
        sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow buildPartial() {
        sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow result = new sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timeUsec_ = timeUsec_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sensorId_ = sensorId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.integrationTimeUs_ = integrationTimeUs_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.integratedX_ = integratedX_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.integratedY_ = integratedY_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.integratedXgyro_ = integratedXgyro_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.integratedYgyro_ = integratedYgyro_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.integratedZgyro_ = integratedZgyro_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.temperature_ = temperature_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.quality_ = quality_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.timeDeltaDistanceUs_ = timeDeltaDistanceUs_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.distance_ = distance_;
          to_bitField0_ |= 0x00000800;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow) {
          return mergeFrom((sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow other) {
        if (other == sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow.getDefaultInstance()) return this;
        if (other.hasTimeUsec()) {
          setTimeUsec(other.getTimeUsec());
        }
        if (other.hasSensorId()) {
          setSensorId(other.getSensorId());
        }
        if (other.hasIntegrationTimeUs()) {
          setIntegrationTimeUs(other.getIntegrationTimeUs());
        }
        if (other.hasIntegratedX()) {
          setIntegratedX(other.getIntegratedX());
        }
        if (other.hasIntegratedY()) {
          setIntegratedY(other.getIntegratedY());
        }
        if (other.hasIntegratedXgyro()) {
          setIntegratedXgyro(other.getIntegratedXgyro());
        }
        if (other.hasIntegratedYgyro()) {
          setIntegratedYgyro(other.getIntegratedYgyro());
        }
        if (other.hasIntegratedZgyro()) {
          setIntegratedZgyro(other.getIntegratedZgyro());
        }
        if (other.hasTemperature()) {
          setTemperature(other.getTemperature());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasTimeDeltaDistanceUs()) {
          setTimeDeltaDistanceUs(other.getTimeDeltaDistanceUs());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTimeUsec()) {
          return false;
        }
        if (!hasSensorId()) {
          return false;
        }
        if (!hasIntegrationTimeUs()) {
          return false;
        }
        if (!hasIntegratedX()) {
          return false;
        }
        if (!hasIntegratedY()) {
          return false;
        }
        if (!hasIntegratedXgyro()) {
          return false;
        }
        if (!hasIntegratedYgyro()) {
          return false;
        }
        if (!hasIntegratedZgyro()) {
          return false;
        }
        if (!hasTemperature()) {
          return false;
        }
        if (!hasQuality()) {
          return false;
        }
        if (!hasTimeDeltaDistanceUs()) {
          return false;
        }
        if (!hasDistance()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timeUsec_ ;
      /**
       * <code>required int64 time_usec = 1;</code>
       * @return Whether the timeUsec field is set.
       */
      @java.lang.Override
      public boolean hasTimeUsec() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int64 time_usec = 1;</code>
       * @return The timeUsec.
       */
      @java.lang.Override
      public long getTimeUsec() {
        return timeUsec_;
      }
      /**
       * <code>required int64 time_usec = 1;</code>
       * @param value The timeUsec to set.
       * @return This builder for chaining.
       */
      public Builder setTimeUsec(long value) {
        bitField0_ |= 0x00000001;
        timeUsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 time_usec = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeUsec() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeUsec_ = 0L;
        onChanged();
        return this;
      }

      private int sensorId_ ;
      /**
       * <code>required int32 sensor_id = 2;</code>
       * @return Whether the sensorId field is set.
       */
      @java.lang.Override
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 sensor_id = 2;</code>
       * @return The sensorId.
       */
      @java.lang.Override
      public int getSensorId() {
        return sensorId_;
      }
      /**
       * <code>required int32 sensor_id = 2;</code>
       * @param value The sensorId to set.
       * @return This builder for chaining.
       */
      public Builder setSensorId(int value) {
        bitField0_ |= 0x00000002;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sensor_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sensorId_ = 0;
        onChanged();
        return this;
      }

      private int integrationTimeUs_ ;
      /**
       * <code>required int32 integration_time_us = 3;</code>
       * @return Whether the integrationTimeUs field is set.
       */
      @java.lang.Override
      public boolean hasIntegrationTimeUs() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 integration_time_us = 3;</code>
       * @return The integrationTimeUs.
       */
      @java.lang.Override
      public int getIntegrationTimeUs() {
        return integrationTimeUs_;
      }
      /**
       * <code>required int32 integration_time_us = 3;</code>
       * @param value The integrationTimeUs to set.
       * @return This builder for chaining.
       */
      public Builder setIntegrationTimeUs(int value) {
        bitField0_ |= 0x00000004;
        integrationTimeUs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 integration_time_us = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntegrationTimeUs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        integrationTimeUs_ = 0;
        onChanged();
        return this;
      }

      private float integratedX_ ;
      /**
       * <code>required float integrated_x = 4;</code>
       * @return Whether the integratedX field is set.
       */
      @java.lang.Override
      public boolean hasIntegratedX() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required float integrated_x = 4;</code>
       * @return The integratedX.
       */
      @java.lang.Override
      public float getIntegratedX() {
        return integratedX_;
      }
      /**
       * <code>required float integrated_x = 4;</code>
       * @param value The integratedX to set.
       * @return This builder for chaining.
       */
      public Builder setIntegratedX(float value) {
        bitField0_ |= 0x00000008;
        integratedX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float integrated_x = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntegratedX() {
        bitField0_ = (bitField0_ & ~0x00000008);
        integratedX_ = 0F;
        onChanged();
        return this;
      }

      private float integratedY_ ;
      /**
       * <code>required float integrated_y = 5;</code>
       * @return Whether the integratedY field is set.
       */
      @java.lang.Override
      public boolean hasIntegratedY() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>required float integrated_y = 5;</code>
       * @return The integratedY.
       */
      @java.lang.Override
      public float getIntegratedY() {
        return integratedY_;
      }
      /**
       * <code>required float integrated_y = 5;</code>
       * @param value The integratedY to set.
       * @return This builder for chaining.
       */
      public Builder setIntegratedY(float value) {
        bitField0_ |= 0x00000010;
        integratedY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float integrated_y = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntegratedY() {
        bitField0_ = (bitField0_ & ~0x00000010);
        integratedY_ = 0F;
        onChanged();
        return this;
      }

      private float integratedXgyro_ ;
      /**
       * <code>required float integrated_xgyro = 6;</code>
       * @return Whether the integratedXgyro field is set.
       */
      @java.lang.Override
      public boolean hasIntegratedXgyro() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>required float integrated_xgyro = 6;</code>
       * @return The integratedXgyro.
       */
      @java.lang.Override
      public float getIntegratedXgyro() {
        return integratedXgyro_;
      }
      /**
       * <code>required float integrated_xgyro = 6;</code>
       * @param value The integratedXgyro to set.
       * @return This builder for chaining.
       */
      public Builder setIntegratedXgyro(float value) {
        bitField0_ |= 0x00000020;
        integratedXgyro_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float integrated_xgyro = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntegratedXgyro() {
        bitField0_ = (bitField0_ & ~0x00000020);
        integratedXgyro_ = 0F;
        onChanged();
        return this;
      }

      private float integratedYgyro_ ;
      /**
       * <code>required float integrated_ygyro = 7;</code>
       * @return Whether the integratedYgyro field is set.
       */
      @java.lang.Override
      public boolean hasIntegratedYgyro() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>required float integrated_ygyro = 7;</code>
       * @return The integratedYgyro.
       */
      @java.lang.Override
      public float getIntegratedYgyro() {
        return integratedYgyro_;
      }
      /**
       * <code>required float integrated_ygyro = 7;</code>
       * @param value The integratedYgyro to set.
       * @return This builder for chaining.
       */
      public Builder setIntegratedYgyro(float value) {
        bitField0_ |= 0x00000040;
        integratedYgyro_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float integrated_ygyro = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntegratedYgyro() {
        bitField0_ = (bitField0_ & ~0x00000040);
        integratedYgyro_ = 0F;
        onChanged();
        return this;
      }

      private float integratedZgyro_ ;
      /**
       * <code>required float integrated_zgyro = 8;</code>
       * @return Whether the integratedZgyro field is set.
       */
      @java.lang.Override
      public boolean hasIntegratedZgyro() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>required float integrated_zgyro = 8;</code>
       * @return The integratedZgyro.
       */
      @java.lang.Override
      public float getIntegratedZgyro() {
        return integratedZgyro_;
      }
      /**
       * <code>required float integrated_zgyro = 8;</code>
       * @param value The integratedZgyro to set.
       * @return This builder for chaining.
       */
      public Builder setIntegratedZgyro(float value) {
        bitField0_ |= 0x00000080;
        integratedZgyro_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float integrated_zgyro = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntegratedZgyro() {
        bitField0_ = (bitField0_ & ~0x00000080);
        integratedZgyro_ = 0F;
        onChanged();
        return this;
      }

      private float temperature_ ;
      /**
       * <code>required float temperature = 9;</code>
       * @return Whether the temperature field is set.
       */
      @java.lang.Override
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>required float temperature = 9;</code>
       * @return The temperature.
       */
      @java.lang.Override
      public float getTemperature() {
        return temperature_;
      }
      /**
       * <code>required float temperature = 9;</code>
       * @param value The temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature(float value) {
        bitField0_ |= 0x00000100;
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float temperature = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000100);
        temperature_ = 0F;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <code>required int32 quality = 10;</code>
       * @return Whether the quality field is set.
       */
      @java.lang.Override
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>required int32 quality = 10;</code>
       * @return The quality.
       */
      @java.lang.Override
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>required int32 quality = 10;</code>
       * @param value The quality to set.
       * @return This builder for chaining.
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000200;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 quality = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000200);
        quality_ = 0;
        onChanged();
        return this;
      }

      private int timeDeltaDistanceUs_ ;
      /**
       * <code>required int32 time_delta_distance_us = 11;</code>
       * @return Whether the timeDeltaDistanceUs field is set.
       */
      @java.lang.Override
      public boolean hasTimeDeltaDistanceUs() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>required int32 time_delta_distance_us = 11;</code>
       * @return The timeDeltaDistanceUs.
       */
      @java.lang.Override
      public int getTimeDeltaDistanceUs() {
        return timeDeltaDistanceUs_;
      }
      /**
       * <code>required int32 time_delta_distance_us = 11;</code>
       * @param value The timeDeltaDistanceUs to set.
       * @return This builder for chaining.
       */
      public Builder setTimeDeltaDistanceUs(int value) {
        bitField0_ |= 0x00000400;
        timeDeltaDistanceUs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 time_delta_distance_us = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeDeltaDistanceUs() {
        bitField0_ = (bitField0_ & ~0x00000400);
        timeDeltaDistanceUs_ = 0;
        onChanged();
        return this;
      }

      private float distance_ ;
      /**
       * <code>required float distance = 12;</code>
       * @return Whether the distance field is set.
       */
      @java.lang.Override
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>required float distance = 12;</code>
       * @return The distance.
       */
      @java.lang.Override
      public float getDistance() {
        return distance_;
      }
      /**
       * <code>required float distance = 12;</code>
       * @param value The distance to set.
       * @return This builder for chaining.
       */
      public Builder setDistance(float value) {
        bitField0_ |= 0x00000800;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float distance = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000800);
        distance_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensor_msgs.msgs.OpticalFlow)
    }

    // @@protoc_insertion_point(class_scope:sensor_msgs.msgs.OpticalFlow)
    private static final sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow();
    }

    public static sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OpticalFlow>
        PARSER = new com.google.protobuf.AbstractParser<OpticalFlow>() {
      @java.lang.Override
      public OpticalFlow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpticalFlow(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OpticalFlow> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OpticalFlow> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public sensor_msgs.msgs.OpticalFlowOuterClass.OpticalFlow getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sensor_msgs_msgs_OpticalFlow_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sensor_msgs_msgs_OpticalFlow_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021OpticalFlow.proto\022\020sensor_msgs.msgs\"\242\002" +
      "\n\013OpticalFlow\022\021\n\ttime_usec\030\001 \002(\003\022\021\n\tsens" +
      "or_id\030\002 \002(\005\022\033\n\023integration_time_us\030\003 \002(\005" +
      "\022\024\n\014integrated_x\030\004 \002(\002\022\024\n\014integrated_y\030\005" +
      " \002(\002\022\030\n\020integrated_xgyro\030\006 \002(\002\022\030\n\020integr" +
      "ated_ygyro\030\007 \002(\002\022\030\n\020integrated_zgyro\030\010 \002" +
      "(\002\022\023\n\013temperature\030\t \002(\002\022\017\n\007quality\030\n \002(\005" +
      "\022\036\n\026time_delta_distance_us\030\013 \002(\005\022\020\n\010dist" +
      "ance\030\014 \002(\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_sensor_msgs_msgs_OpticalFlow_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sensor_msgs_msgs_OpticalFlow_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sensor_msgs_msgs_OpticalFlow_descriptor,
        new java.lang.String[] { "TimeUsec", "SensorId", "IntegrationTimeUs", "IntegratedX", "IntegratedY", "IntegratedXgyro", "IntegratedYgyro", "IntegratedZgyro", "Temperature", "Quality", "TimeDeltaDistanceUs", "Distance", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
